

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 13:09:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195  0F41                     __pidataBANK0:
   196                           
   197                           ;initializer for _year
   198  0F41  3415               	retlw	21
   199  0F42  3400               	retlw	0
   200                           
   201                           ;initializer for _month
   202  0F43  340C               	retlw	12
   203  0F44  3400               	retlw	0
   204                           
   205                           ;initializer for _date
   206  0F45  341D               	retlw	29
   207  0F46  3400               	retlw	0
   208                           
   209                           ;initializer for _day
   210  0F47  3404               	retlw	4
   211  0F48  3400               	retlw	0
   212                           
   213                           ;initializer for _hour
   214  0F49  340C               	retlw	12
   215  0F4A  3400               	retlw	0
   216                           
   217                           ;initializer for _min
   218  0F4B  3419               	retlw	25
   219  0F4C  3400               	retlw	0
   220  0013                     _SSPBUF	set	19
   221  0014                     _SSPCON	set	20
   222  0043                     _RD3	set	67
   223  0042                     _RD2	set	66
   224  0047                     _RD7	set	71
   225  0046                     _RD6	set	70
   226  0045                     _RD5	set	69
   227  0044                     _RD4	set	68
   228  0088                     _TRISD	set	136
   229  0094                     _SSPSTAT	set	148
   230  0093                     _SSPADD	set	147
   231  0091                     _SSPCON2	set	145
   232  048C                     _ACKEN	set	1164
   233  048D                     _ACKDT	set	1165
   234  048B                     _RCEN	set	1163
   235  048A                     _PEN	set	1162
   236  0488                     _SEN	set	1160
   237  043C                     _TRISC4	set	1084
   238  043B                     _TRISC3	set	1083
   239                           
   240                           	psect	strings
   241  0003                     __pstrings:
   242  0003                     stringtab:
   243  0003                     __stringtab:
   244  0003                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  0003                     stringdir:
   248  0003  3000               	movlw	high stringdir
   249  0004  008A               	movwf	10
   250  0005  0804               	movf	4,w
   251  0006  0A84               	incf	4,f
   252  0007  0782               	addwf	2,f
   253  0008                     __stringbase:
   254  0008  3400               	retlw	0
   255  0009                     __end_of__stringtab:
   256  0009                     STR_1:
   257  0009  3444               	retlw	68	;'D'
   258  000A  3453               	retlw	83	;'S'
   259  000B  3431               	retlw	49	;'1'
   260  000C  3433               	retlw	51	;'3'
   261  000D  3430               	retlw	48	;'0'
   262  000E  3437               	retlw	55	;'7'
   263  000F  3452               	retlw	82	;'R'
   264  0010  3454               	retlw	84	;'T'
   265  0011  3443               	retlw	67	;'C'
   266  0012  3420               	retlw	32	;' '
   267  0013  3449               	retlw	73	;'I'
   268  0014  346E               	retlw	110	;'n'
   269  0015  3474               	retlw	116	;'t'
   270  0016  3465               	retlw	101	;'e'
   271  0017  3472               	retlw	114	;'r'
   272  0018  3466               	retlw	102	;'f'
   273  0019  3400               	retlw	0
   274  001A                     STR_4:
   275  001A  3448               	retlw	72	;'H'
   276  001B  3461               	retlw	97	;'a'
   277  001C  3476               	retlw	118	;'v'
   278  001D  3465               	retlw	101	;'e'
   279  001E  3420               	retlw	32	;' '
   280  001F  3441               	retlw	65	;'A'
   281  0020  3420               	retlw	32	;' '
   282  0021  3447               	retlw	71	;'G'
   283  0022  346F               	retlw	111	;'o'
   284  0023  346F               	retlw	111	;'o'
   285  0024  3464               	retlw	100	;'d'
   286  0025  3420               	retlw	32	;' '
   287  0026  3420               	retlw	32	;' '
   288  0027  3444               	retlw	68	;'D'
   289  0028  3461               	retlw	97	;'a'
   290  0029  3479               	retlw	121	;'y'
   291  002A  3400               	retlw	0
   292  002B                     STR_2:
   293  002B  3420               	retlw	32	;' '
   294  002C  342D               	retlw	45	;'-'
   295  002D  3420               	retlw	32	;' '
   296  002E  3442               	retlw	66	;'B'
   297  002F  3447               	retlw	71	;'G'
   298  0030  3447               	retlw	71	;'G'
   299  0031  346F               	retlw	111	;'o'
   300  0032  3470               	retlw	112	;'p'
   301  0033  3461               	retlw	97	;'a'
   302  0034  346C               	retlw	108	;'l'
   303  0035  3420               	retlw	32	;' '
   304  0036  3400               	retlw	0
   305  0037                     STR_10:
   306  0037  3457               	retlw	87	;'W'
   307  0038  3465               	retlw	101	;'e'
   308  0039  3464               	retlw	100	;'d'
   309  003A  346E               	retlw	110	;'n'
   310  003B  3465               	retlw	101	;'e'
   311  003C  3473               	retlw	115	;'s'
   312  003D  3464               	retlw	100	;'d'
   313  003E  3461               	retlw	97	;'a'
   314  003F  3479               	retlw	121	;'y'
   315  0040  3400               	retlw	0
   316  0041                     STR_13:
   317  0041  3453               	retlw	83	;'S'
   318  0042  3461               	retlw	97	;'a'
   319  0043  3474               	retlw	116	;'t'
   320  0044  3475               	retlw	117	;'u'
   321  0045  3472               	retlw	114	;'r'
   322  0046  3464               	retlw	100	;'d'
   323  0047  3461               	retlw	97	;'a'
   324  0048  3479               	retlw	121	;'y'
   325  0049  3400               	retlw	0
   326  004A                     STR_11:
   327  004A  3454               	retlw	84	;'T'
   328  004B  3468               	retlw	104	;'h'
   329  004C  3475               	retlw	117	;'u'
   330  004D  3472               	retlw	114	;'r'
   331  004E  3473               	retlw	115	;'s'
   332  004F  3464               	retlw	100	;'d'
   333  0050  3461               	retlw	97	;'a'
   334  0051  3479               	retlw	121	;'y'
   335  0052  3400               	retlw	0
   336  0053                     STR_3:
   337  0053  3420               	retlw	32	;' '
   338  0054  3454               	retlw	84	;'T'
   339  0055  3449               	retlw	73	;'I'
   340  0056  344D               	retlw	77	;'M'
   341  0057  3445               	retlw	69	;'E'
   342  0058  343A               	retlw	58	;':'
   343  0059  3420               	retlw	32	;' '
   344  005A  3400               	retlw	0
   345  005B                     STR_9:
   346  005B  3454               	retlw	84	;'T'
   347  005C  3475               	retlw	117	;'u'
   348  005D  3465               	retlw	101	;'e'
   349  005E  3473               	retlw	115	;'s'
   350  005F  3464               	retlw	100	;'d'
   351  0060  3461               	retlw	97	;'a'
   352  0061  3479               	retlw	121	;'y'
   353  0062  3400               	retlw	0
   354  0063                     STR_5:
   355  0063  3444               	retlw	68	;'D'
   356  0064  3441               	retlw	65	;'A'
   357  0065  3454               	retlw	84	;'T'
   358  0066  3445               	retlw	69	;'E'
   359  0067  343A               	retlw	58	;':'
   360  0068  3420               	retlw	32	;' '
   361  0069  3400               	retlw	0
   362  006A                     STR_12:
   363  006A  3446               	retlw	70	;'F'
   364  006B  3472               	retlw	114	;'r'
   365  006C  3469               	retlw	105	;'i'
   366  006D  3464               	retlw	100	;'d'
   367  006E  3461               	retlw	97	;'a'
   368  006F  3479               	retlw	121	;'y'
   369  0070  3400               	retlw	0
   370  0071                     STR_8:
   371  0071  344D               	retlw	77	;'M'
   372  0072  346F               	retlw	111	;'o'
   373  0073  346E               	retlw	110	;'n'
   374  0074  3464               	retlw	100	;'d'
   375  0075  3461               	retlw	97	;'a'
   376  0076  3479               	retlw	121	;'y'
   377  0077  3400               	retlw	0
   378  0078                     STR_7:
   379  0078  3453               	retlw	83	;'S'
   380  0079  3475               	retlw	117	;'u'
   381  007A  346E               	retlw	110	;'n'
   382  007B  3464               	retlw	100	;'d'
   383  007C  3461               	retlw	97	;'a'
   384  007D  3479               	retlw	121	;'y'
   385  007E  3400               	retlw	0
   386  007F                     STR_6:
   387  007F  3444               	retlw	68	;'D'
   388  0080  3441               	retlw	65	;'A'
   389  0081  3459               	retlw	89	;'Y'
   390  0082  343A               	retlw	58	;':'
   391  0083  3420               	retlw	32	;' '
   392  0084  3400               	retlw	0
   393                           
   394                           	psect	cinit
   395  07EC                     start_initialization:	
   396                           ; #config settings
   397                           
   398  07EC                     __initialization:
   399                           
   400                           ; Initialize objects allocated to BANK0
   401  07EC  1383               	bcf	3,7	;select IRP bank0
   402  07ED  3050               	movlw	low (__pdataBANK0+12)
   403  07EE  00FD               	movwf	btemp+-1
   404  07EF  300F               	movlw	high __pidataBANK0
   405  07F0  00FE               	movwf	btemp
   406  07F1  3041               	movlw	low __pidataBANK0
   407  07F2  00FF               	movwf	btemp+1
   408  07F3  3044               	movlw	low __pdataBANK0
   409  07F4  0084               	movwf	4
   410  07F5  120A  158A  276B  120A  118A  	fcall	init_ram0
   411                           
   412                           ; Clear objects allocated to BANK0
   413  07FA  01D0               	clrf	__pbssBANK0& (0+127)
   414  07FB  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   415  07FC                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418  07FC                     __end_of__initialization:
   419  07FC  0183               	clrf	3
   420  07FD  120A  118A  2DD3   	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	bssBANK0
   423  0050                     __pbssBANK0:
   424  0050                     _sec:
   425  0050                     	ds	2
   426                           
   427                           	psect	dataBANK0
   428  0044                     __pdataBANK0:
   429  0044                     _year:
   430  0044                     	ds	2
   431  0046                     _month:
   432  0046                     	ds	2
   433  0048                     _date:
   434  0048                     	ds	2
   435  004A                     _day:
   436  004A                     	ds	2
   437  004C                     _hour:
   438  004C                     	ds	2
   439  004E                     _min:
   440  004E                     	ds	2
   441                           
   442                           	psect	inittext
   443  0F67                     init_fetch0:	
   444                           ;	Called with low address in FSR and high address in W
   445                           
   446  0F67  087E               	movf	btemp,w
   447  0F68  008A               	movwf	10
   448  0F69  087F               	movf	btemp+1,w
   449  0F6A  0082               	movwf	2
   450  0F6B                     init_ram0:	
   451                           ;Called with:
   452                           ;	high address of idata address in btemp 
   453                           ;	low address of idata address in btemp+1 
   454                           ;	low address of data in FSR
   455                           ;	high address + 1 of data in btemp-1
   456                           
   457  0F6B  120A  158A  2767  120A  158A  	fcall	init_fetch0
   458  0F70  0080               	movwf	0
   459  0F71  0A84               	incf	4,f
   460  0F72  0804               	movf	4,w
   461  0F73  067D               	xorwf	btemp+-1,w
   462  0F74  1903               	btfsc	3,2
   463  0F75  3400               	retlw	0
   464  0F76  0AFF               	incf	btemp+1,f
   465  0F77  1903               	btfsc	3,2
   466  0F78  0AFE               	incf	btemp,f
   467  0F79  2F6B               	goto	init_ram0
   468                           
   469                           	psect	cstackCOMMON
   470  0070                     __pcstackCOMMON:
   471  0070                     ?_Lcd_SetBit:
   472  0070                     ??_Lcd_SetBit:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_Lcd_Cmd:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_Lcd_Start:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_Lcd_Print_Char:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_Lcd_Print_String:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_I2C_Hold:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ??_I2C_Hold:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_I2C_Begin:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ??_I2C_Begin:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_I2C_End:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ??_I2C_End:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_Set_Time_Date:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Update_Current_Date_Time:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd_Clear:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_I2C_Read:	
   515                           ; 2 bytes @ 0x0
   516                           
   517  0070                     ?_main:	
   518                           ; 2 bytes @ 0x0
   519                           
   520  0070                     ?___wmul:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0070                     ?___awdiv:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0070                     ?___awmod:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0070                     ?___lmul:	
   530                           ; 2 bytes @ 0x0
   531                           
   532  0070                     Lcd_SetBit@data_bit:	
   533                           ; 4 bytes @ 0x0
   534                           
   535  0070                     I2C_Read@ack:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ___wmul@multiplier:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0070                     ___awdiv@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0070                     ___awmod@divisor:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0070                     ___lmul@multiplier:	
   548                           ; 2 bytes @ 0x0
   549                           
   550                           
   551                           ; 4 bytes @ 0x0
   552  0070                     	ds	1
   553  0071                     ??_Lcd_Cmd:
   554  0071                     ??_Lcd_Print_Char:	
   555                           ; 1 bytes @ 0x1
   556                           
   557                           
   558                           ; 1 bytes @ 0x1
   559  0071                     	ds	1
   560  0072                     ??_I2C_Read:
   561  0072                     Lcd_Print_Char@Lower_Nibble:	
   562                           ; 1 bytes @ 0x2
   563                           
   564  0072                     ___wmul@multiplicand:	
   565                           ; 1 bytes @ 0x2
   566                           
   567  0072                     ___awdiv@dividend:	
   568                           ; 2 bytes @ 0x2
   569                           
   570  0072                     ___awmod@dividend:	
   571                           ; 2 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575  0072                     	ds	1
   576  0073                     Lcd_Cmd@a:
   577  0073                     Lcd_Print_Char@Upper_Nibble:	
   578                           ; 1 bytes @ 0x3
   579                           
   580                           
   581                           ; 1 bytes @ 0x3
   582  0073                     	ds	1
   583  0074                     ??_Lcd_Clear:
   584  0074                     ?_Lcd_Set_Cursor:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0074                     ??_Lcd_Start:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0074                     ??___wmul:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0074                     ??___awdiv:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0074                     ??___awmod:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0074                     Lcd_Set_Cursor@b:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     Lcd_Print_Char@data:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0074                     I2C_Read@incoming:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     ___wmul@product:	
   609                           ; 2 bytes @ 0x4
   610                           
   611  0074                     ___lmul@multiplicand:	
   612                           ; 2 bytes @ 0x4
   613                           
   614                           
   615                           ; 4 bytes @ 0x4
   616  0074                     	ds	1
   617  0075                     ??_Lcd_Set_Cursor:
   618  0075                     ___awdiv@counter:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     ___awmod@counter:	
   622                           ; 1 bytes @ 0x5
   623                           
   624  0075                     Lcd_Print_Char@i:	
   625                           ; 1 bytes @ 0x5
   626                           
   627                           
   628                           ; 2 bytes @ 0x5
   629  0075                     	ds	1
   630  0076                     ?_BCD_2_DEC:
   631  0076                     ___awdiv@sign:	
   632                           ; 2 bytes @ 0x6
   633                           
   634  0076                     ___awmod@sign:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     BCD_2_DEC@to_convert:	
   638                           ; 1 bytes @ 0x6
   639                           
   640                           
   641                           ; 2 bytes @ 0x6
   642  0076                     	ds	1
   643  0077                     Lcd_Set_Cursor@a:
   644  0077                     Lcd_Print_Char@i_83:	
   645                           ; 1 bytes @ 0x7
   646                           
   647  0077                     ___awdiv@quotient:	
   648                           ; 2 bytes @ 0x7
   649                           
   650                           
   651                           ; 2 bytes @ 0x7
   652  0077                     	ds	1
   653  0078                     ??_BCD_2_DEC:
   654  0078                     ??___lmul:	
   655                           ; 1 bytes @ 0x8
   656                           
   657  0078                     Lcd_Set_Cursor@z:	
   658                           ; 1 bytes @ 0x8
   659                           
   660                           
   661                           ; 1 bytes @ 0x8
   662  0078                     	ds	1
   663  0079                     ??_Lcd_Print_String:
   664  0079                     ?_DEC_2_BCD:	
   665                           ; 1 bytes @ 0x9
   666                           
   667  0079                     Lcd_Set_Cursor@y:	
   668                           ; 2 bytes @ 0x9
   669                           
   670  0079                     Lcd_Print_String@i:	
   671                           ; 1 bytes @ 0x9
   672                           
   673  0079                     DEC_2_BCD@to_convert:	
   674                           ; 2 bytes @ 0x9
   675                           
   676  0079                     ___lmul@product:	
   677                           ; 2 bytes @ 0x9
   678                           
   679                           
   680                           ; 4 bytes @ 0x9
   681  0079                     	ds	1
   682  007A                     Lcd_Set_Cursor@temp:
   683                           
   684                           ; 1 bytes @ 0xA
   685  007A                     	ds	1
   686  007B                     ??_DEC_2_BCD:
   687  007B                     Lcd_Print_String@a:	
   688                           ; 1 bytes @ 0xB
   689                           
   690                           
   691                           ; 1 bytes @ 0xB
   692  007B                     	ds	1
   693  007C                     ?_day_print:
   694  007C                     day_print@disp:	
   695                           ; 1 bytes @ 0xC
   696                           
   697                           
   698                           ; 2 bytes @ 0xC
   699  007C                     	ds	1
   700  007D                     ??_I2C_Write:
   701  007D                     ??_Set_Time_Date:	
   702                           ; 1 bytes @ 0xD
   703                           
   704  007D                     ??_Update_Current_Date_Time:	
   705                           ; 1 bytes @ 0xD
   706                           
   707  007D                     ??___lldiv:	
   708                           ; 1 bytes @ 0xD
   709                           
   710                           
   711                           ; 1 bytes @ 0xD
   712  007D                     	ds	1
   713  007E                     ??_day_print:
   714                           
   715                           	psect	cstackBANK0
   716  0020                     __pcstackBANK0:	
   717                           ; 1 bytes @ 0xE
   718                           
   719  0020                     ?_I2C_Write:
   720  0020                     ?___lldiv:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0020                     I2C_Write@data:	
   724                           ; 4 bytes @ 0x0
   725                           
   726  0020                     ___lldiv@divisor:	
   727                           ; 2 bytes @ 0x0
   728                           
   729                           
   730                           ; 4 bytes @ 0x0
   731  0020                     	ds	4
   732  0024                     ___lldiv@dividend:
   733                           
   734                           ; 4 bytes @ 0x4
   735  0024                     	ds	4
   736  0028                     ___lldiv@quotient:
   737                           
   738                           ; 4 bytes @ 0x8
   739  0028                     	ds	4
   740  002C                     ___lldiv@counter:
   741                           
   742                           ; 1 bytes @ 0xC
   743  002C                     	ds	1
   744  002D                     ?_I2C_Initialize:
   745  002D                     I2C_Initialize@feq_K:	
   746                           ; 1 bytes @ 0xD
   747                           
   748                           
   749                           ; 4 bytes @ 0xD
   750  002D                     	ds	4
   751  0031                     ??_I2C_Initialize:
   752                           
   753                           ; 1 bytes @ 0x11
   754  0031                     	ds	4
   755  0035                     ??_main:
   756                           
   757                           ; 1 bytes @ 0x15
   758  0035                     	ds	3
   759  0038                     main@sec_0:
   760                           
   761                           ; 1 bytes @ 0x18
   762  0038                     	ds	1
   763  0039                     main@sec_1:
   764                           
   765                           ; 1 bytes @ 0x19
   766  0039                     	ds	1
   767  003A                     main@min_0:
   768                           
   769                           ; 1 bytes @ 0x1A
   770  003A                     	ds	1
   771  003B                     main@min_1:
   772                           
   773                           ; 1 bytes @ 0x1B
   774  003B                     	ds	1
   775  003C                     main@hour_0:
   776                           
   777                           ; 1 bytes @ 0x1C
   778  003C                     	ds	1
   779  003D                     main@hour_1:
   780                           
   781                           ; 1 bytes @ 0x1D
   782  003D                     	ds	1
   783  003E                     main@date_0:
   784                           
   785                           ; 1 bytes @ 0x1E
   786  003E                     	ds	1
   787  003F                     main@date_1:
   788                           
   789                           ; 1 bytes @ 0x1F
   790  003F                     	ds	1
   791  0040                     main@month_0:
   792                           
   793                           ; 1 bytes @ 0x20
   794  0040                     	ds	1
   795  0041                     main@month_1:
   796                           
   797                           ; 1 bytes @ 0x21
   798  0041                     	ds	1
   799  0042                     main@year_0:
   800                           
   801                           ; 1 bytes @ 0x22
   802  0042                     	ds	1
   803  0043                     main@year_1:
   804                           
   805                           ; 1 bytes @ 0x23
   806  0043                     	ds	1
   807                           
   808                           	psect	maintext
   809  05D3                     __pmaintext:	
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 46 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  year_1          1   35[BANK0 ] unsigned char 
   820 ;;  year_0          1   34[BANK0 ] unsigned char 
   821 ;;  month_1         1   33[BANK0 ] unsigned char 
   822 ;;  month_0         1   32[BANK0 ] unsigned char 
   823 ;;  date_1          1   31[BANK0 ] unsigned char 
   824 ;;  date_0          1   30[BANK0 ] unsigned char 
   825 ;;  hour_1          1   29[BANK0 ] unsigned char 
   826 ;;  hour_0          1   28[BANK0 ] unsigned char 
   827 ;;  min_1           1   27[BANK0 ] unsigned char 
   828 ;;  min_0           1   26[BANK0 ] unsigned char 
   829 ;;  sec_1           1   25[BANK0 ] unsigned char 
   830 ;;  sec_0           1   24[BANK0 ] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2  136[None  ] int 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : B00/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0      12       0       0       0
   842 ;;      Temps:          0       3       0       0       0
   843 ;;      Totals:         0      15       0       0       0
   844 ;;Total ram usage:       15 bytes
   845 ;; Hardware stack levels required when called: 4
   846 ;; This function calls:
   847 ;;		_I2C_Initialize
   848 ;;		_Lcd_Clear
   849 ;;		_Lcd_Print_Char
   850 ;;		_Lcd_Print_String
   851 ;;		_Lcd_Set_Cursor
   852 ;;		_Lcd_Start
   853 ;;		_Set_Time_Date
   854 ;;		_Update_Current_Date_Time
   855 ;;		___awdiv
   856 ;;		___awmod
   857 ;;		_day_print
   858 ;; This function is called by:
   859 ;;		Startup code after reset
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _main
   865  05D3                     _main:
   866  05D3                     l1526:	
   867                           ;incstack = 0
   868                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   869                           
   870                           
   871                           ;main.c: 49:     TRISD = 0x00;
   872  05D3  1683               	bsf	3,5	;RP0=1, select bank1
   873  05D4  1303               	bcf	3,6	;RP1=0, select bank1
   874  05D5  0188               	clrf	8	;volatile
   875  05D6                     l1528:
   876                           
   877                           ;main.c: 51:     Lcd_Start();
   878  05D6  120A  118A  21FA  120A  118A  	fcall	_Lcd_Start
   879  05DB                     l1530:
   880                           
   881                           ;main.c: 53:     I2C_Initialize(100);
   882  05DB  3000               	movlw	0
   883  05DC  1283               	bcf	3,5	;RP0=0, select bank0
   884  05DD  1303               	bcf	3,6	;RP1=0, select bank0
   885  05DE  00B0               	movwf	I2C_Initialize@feq_K+3
   886  05DF  3000               	movlw	0
   887  05E0  00AF               	movwf	I2C_Initialize@feq_K+2
   888  05E1  3000               	movlw	0
   889  05E2  00AE               	movwf	I2C_Initialize@feq_K+1
   890  05E3  3064               	movlw	100
   891  05E4  00AD               	movwf	I2C_Initialize@feq_K
   892  05E5  120A  118A  21A7  120A  118A  	fcall	_I2C_Initialize
   893  05EA                     l1532:
   894                           
   895                           ;main.c: 55:     Set_Time_Date();
   896  05EA  120A  118A  2438  120A  118A  	fcall	_Set_Time_Date
   897  05EF                     l1534:
   898                           
   899                           ;main.c: 58:      Lcd_Clear();
   900  05EF  120A  158A  275A  120A  118A  	fcall	_Lcd_Clear
   901  05F4                     l1536:
   902                           
   903                           ;main.c: 59:      Lcd_Set_Cursor(1,1);
   904  05F4  01F4               	clrf	Lcd_Set_Cursor@b
   905  05F5  0AF4               	incf	Lcd_Set_Cursor@b,f
   906  05F6  3001               	movlw	1
   907  05F7  120A  118A  2155  120A  118A  	fcall	_Lcd_Set_Cursor
   908  05FC                     l1538:
   909                           
   910                           ;main.c: 60:      Lcd_Print_String("DS1307RTC Interf");
   911  05FC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   912  05FD  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
   913  0602                     l1540:
   914                           
   915                           ;main.c: 61:      Lcd_Set_Cursor(2,7);
   916  0602  3007               	movlw	7
   917  0603  1283               	bcf	3,5	;RP0=0, select bank0
   918  0604  1303               	bcf	3,6	;RP1=0, select bank0
   919  0605  00B5               	movwf	??_main
   920  0606  0835               	movf	??_main,w
   921  0607  00F4               	movwf	Lcd_Set_Cursor@b
   922  0608  3002               	movlw	2
   923  0609  120A  118A  2155  120A  118A  	fcall	_Lcd_Set_Cursor
   924  060E                     l1542:
   925                           
   926                           ;main.c: 62:      Lcd_Print_String(" - BGGopal ");
   927  060E  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   928  060F  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
   929  0614                     l1544:
   930                           
   931                           ;main.c: 63:      _delay((unsigned long)((1500)*(20000000/4000.0)));
   932  0614  3027               	movlw	39
   933  0615  1283               	bcf	3,5	;RP0=0, select bank0
   934  0616  1303               	bcf	3,6	;RP1=0, select bank0
   935  0617  00B7               	movwf	??_main+2
   936  0618  300D               	movlw	13
   937  0619  00B6               	movwf	??_main+1
   938  061A  3025               	movlw	37
   939  061B  00B5               	movwf	??_main
   940  061C                     u1057:
   941  061C  0BB5               	decfsz	??_main,f
   942  061D  2E1C               	goto	u1057
   943  061E  0BB6               	decfsz	??_main+1,f
   944  061F  2E1C               	goto	u1057
   945  0620  0BB7               	decfsz	??_main+2,f
   946  0621  2E1C               	goto	u1057
   947  0622  2E23               	nop2
   948  0623                     l1546:
   949                           
   950                           ;main.c: 66:   {;main.c: 68:     Update_Current_Date_Time();
   951  0623  120A  118A  24E7  120A  118A  	fcall	_Update_Current_Date_Time
   952  0628                     l1548:
   953                           
   954                           ;main.c: 71:      char sec_0 = sec%10;
   955  0628  300A               	movlw	10
   956  0629  00F0               	movwf	___awmod@divisor
   957  062A  3000               	movlw	0
   958  062B  00F1               	movwf	___awmod@divisor+1
   959  062C  1283               	bcf	3,5	;RP0=0, select bank0
   960  062D  1303               	bcf	3,6	;RP1=0, select bank0
   961  062E  0851               	movf	_sec+1,w
   962  062F  00F3               	movwf	___awmod@dividend+1
   963  0630  0850               	movf	_sec,w
   964  0631  00F2               	movwf	___awmod@dividend
   965  0632  120A  118A  224F  120A  118A  	fcall	___awmod
   966  0637  0870               	movf	?___awmod,w
   967  0638  1283               	bcf	3,5	;RP0=0, select bank0
   968  0639  1303               	bcf	3,6	;RP1=0, select bank0
   969  063A  00B5               	movwf	??_main
   970  063B  0835               	movf	??_main,w
   971  063C  00B8               	movwf	main@sec_0
   972  063D                     l1550:
   973                           
   974                           ;main.c: 72:      char sec_1 = (sec/10);
   975  063D  300A               	movlw	10
   976  063E  00F0               	movwf	___awdiv@divisor
   977  063F  3000               	movlw	0
   978  0640  00F1               	movwf	___awdiv@divisor+1
   979  0641  0851               	movf	_sec+1,w
   980  0642  00F3               	movwf	___awdiv@dividend+1
   981  0643  0850               	movf	_sec,w
   982  0644  00F2               	movwf	___awdiv@dividend
   983  0645  120A  118A  2369  120A  118A  	fcall	___awdiv
   984  064A  0870               	movf	?___awdiv,w
   985  064B  1283               	bcf	3,5	;RP0=0, select bank0
   986  064C  1303               	bcf	3,6	;RP1=0, select bank0
   987  064D  00B5               	movwf	??_main
   988  064E  0835               	movf	??_main,w
   989  064F  00B9               	movwf	main@sec_1
   990  0650                     l1552:
   991                           
   992                           ;main.c: 73:      char min_0 = min%10;
   993  0650  300A               	movlw	10
   994  0651  00F0               	movwf	___awmod@divisor
   995  0652  3000               	movlw	0
   996  0653  00F1               	movwf	___awmod@divisor+1
   997  0654  084F               	movf	_min+1,w
   998  0655  00F3               	movwf	___awmod@dividend+1
   999  0656  084E               	movf	_min,w
  1000  0657  00F2               	movwf	___awmod@dividend
  1001  0658  120A  118A  224F  120A  118A  	fcall	___awmod
  1002  065D  0870               	movf	?___awmod,w
  1003  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1004  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0660  00B5               	movwf	??_main
  1006  0661  0835               	movf	??_main,w
  1007  0662  00BA               	movwf	main@min_0
  1008  0663                     l1554:
  1009                           
  1010                           ;main.c: 74:      char min_1 = min/10;
  1011  0663  300A               	movlw	10
  1012  0664  00F0               	movwf	___awdiv@divisor
  1013  0665  3000               	movlw	0
  1014  0666  00F1               	movwf	___awdiv@divisor+1
  1015  0667  084F               	movf	_min+1,w
  1016  0668  00F3               	movwf	___awdiv@dividend+1
  1017  0669  084E               	movf	_min,w
  1018  066A  00F2               	movwf	___awdiv@dividend
  1019  066B  120A  118A  2369  120A  118A  	fcall	___awdiv
  1020  0670  0870               	movf	?___awdiv,w
  1021  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0673  00B5               	movwf	??_main
  1024  0674  0835               	movf	??_main,w
  1025  0675  00BB               	movwf	main@min_1
  1026  0676                     l1556:
  1027                           
  1028                           ;main.c: 75:      char hour_0 = hour%10;
  1029  0676  300A               	movlw	10
  1030  0677  00F0               	movwf	___awmod@divisor
  1031  0678  3000               	movlw	0
  1032  0679  00F1               	movwf	___awmod@divisor+1
  1033  067A  084D               	movf	_hour+1,w
  1034  067B  00F3               	movwf	___awmod@dividend+1
  1035  067C  084C               	movf	_hour,w
  1036  067D  00F2               	movwf	___awmod@dividend
  1037  067E  120A  118A  224F  120A  118A  	fcall	___awmod
  1038  0683  0870               	movf	?___awmod,w
  1039  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0686  00B5               	movwf	??_main
  1042  0687  0835               	movf	??_main,w
  1043  0688  00BC               	movwf	main@hour_0
  1044  0689                     l1558:
  1045                           
  1046                           ;main.c: 76:      char hour_1 = hour/10;
  1047  0689  300A               	movlw	10
  1048  068A  00F0               	movwf	___awdiv@divisor
  1049  068B  3000               	movlw	0
  1050  068C  00F1               	movwf	___awdiv@divisor+1
  1051  068D  084D               	movf	_hour+1,w
  1052  068E  00F3               	movwf	___awdiv@dividend+1
  1053  068F  084C               	movf	_hour,w
  1054  0690  00F2               	movwf	___awdiv@dividend
  1055  0691  120A  118A  2369  120A  118A  	fcall	___awdiv
  1056  0696  0870               	movf	?___awdiv,w
  1057  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0699  00B5               	movwf	??_main
  1060  069A  0835               	movf	??_main,w
  1061  069B  00BD               	movwf	main@hour_1
  1062  069C                     l1560:
  1063                           
  1064                           ;main.c: 77:      char date_0 = date%10;
  1065  069C  300A               	movlw	10
  1066  069D  00F0               	movwf	___awmod@divisor
  1067  069E  3000               	movlw	0
  1068  069F  00F1               	movwf	___awmod@divisor+1
  1069  06A0  0849               	movf	_date+1,w
  1070  06A1  00F3               	movwf	___awmod@dividend+1
  1071  06A2  0848               	movf	_date,w
  1072  06A3  00F2               	movwf	___awmod@dividend
  1073  06A4  120A  118A  224F  120A  118A  	fcall	___awmod
  1074  06A9  0870               	movf	?___awmod,w
  1075  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1076  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1077  06AC  00B5               	movwf	??_main
  1078  06AD  0835               	movf	??_main,w
  1079  06AE  00BE               	movwf	main@date_0
  1080  06AF                     l1562:
  1081                           
  1082                           ;main.c: 78:      char date_1 = date/10;
  1083  06AF  300A               	movlw	10
  1084  06B0  00F0               	movwf	___awdiv@divisor
  1085  06B1  3000               	movlw	0
  1086  06B2  00F1               	movwf	___awdiv@divisor+1
  1087  06B3  0849               	movf	_date+1,w
  1088  06B4  00F3               	movwf	___awdiv@dividend+1
  1089  06B5  0848               	movf	_date,w
  1090  06B6  00F2               	movwf	___awdiv@dividend
  1091  06B7  120A  118A  2369  120A  118A  	fcall	___awdiv
  1092  06BC  0870               	movf	?___awdiv,w
  1093  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1094  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1095  06BF  00B5               	movwf	??_main
  1096  06C0  0835               	movf	??_main,w
  1097  06C1  00BF               	movwf	main@date_1
  1098  06C2                     l1564:
  1099                           
  1100                           ;main.c: 79:      char month_0 = month%10;
  1101  06C2  300A               	movlw	10
  1102  06C3  00F0               	movwf	___awmod@divisor
  1103  06C4  3000               	movlw	0
  1104  06C5  00F1               	movwf	___awmod@divisor+1
  1105  06C6  0847               	movf	_month+1,w
  1106  06C7  00F3               	movwf	___awmod@dividend+1
  1107  06C8  0846               	movf	_month,w
  1108  06C9  00F2               	movwf	___awmod@dividend
  1109  06CA  120A  118A  224F  120A  118A  	fcall	___awmod
  1110  06CF  0870               	movf	?___awmod,w
  1111  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1112  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1113  06D2  00B5               	movwf	??_main
  1114  06D3  0835               	movf	??_main,w
  1115  06D4  00C0               	movwf	main@month_0
  1116  06D5                     l1566:
  1117                           
  1118                           ;main.c: 80:      char month_1 = month/10;
  1119  06D5  300A               	movlw	10
  1120  06D6  00F0               	movwf	___awdiv@divisor
  1121  06D7  3000               	movlw	0
  1122  06D8  00F1               	movwf	___awdiv@divisor+1
  1123  06D9  0847               	movf	_month+1,w
  1124  06DA  00F3               	movwf	___awdiv@dividend+1
  1125  06DB  0846               	movf	_month,w
  1126  06DC  00F2               	movwf	___awdiv@dividend
  1127  06DD  120A  118A  2369  120A  118A  	fcall	___awdiv
  1128  06E2  0870               	movf	?___awdiv,w
  1129  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1130  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1131  06E5  00B5               	movwf	??_main
  1132  06E6  0835               	movf	??_main,w
  1133  06E7  00C1               	movwf	main@month_1
  1134  06E8                     l1568:
  1135                           
  1136                           ;main.c: 81:      char year_0 = year%10;
  1137  06E8  300A               	movlw	10
  1138  06E9  00F0               	movwf	___awmod@divisor
  1139  06EA  3000               	movlw	0
  1140  06EB  00F1               	movwf	___awmod@divisor+1
  1141  06EC  0845               	movf	_year+1,w
  1142  06ED  00F3               	movwf	___awmod@dividend+1
  1143  06EE  0844               	movf	_year,w
  1144  06EF  00F2               	movwf	___awmod@dividend
  1145  06F0  120A  118A  224F  120A  118A  	fcall	___awmod
  1146  06F5  0870               	movf	?___awmod,w
  1147  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1148  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1149  06F8  00B5               	movwf	??_main
  1150  06F9  0835               	movf	??_main,w
  1151  06FA  00C2               	movwf	main@year_0
  1152  06FB                     l1570:
  1153                           
  1154                           ;main.c: 82:      char year_1 = year/10;
  1155  06FB  300A               	movlw	10
  1156  06FC  00F0               	movwf	___awdiv@divisor
  1157  06FD  3000               	movlw	0
  1158  06FE  00F1               	movwf	___awdiv@divisor+1
  1159  06FF  0845               	movf	_year+1,w
  1160  0700  00F3               	movwf	___awdiv@dividend+1
  1161  0701  0844               	movf	_year,w
  1162  0702  00F2               	movwf	___awdiv@dividend
  1163  0703  120A  118A  2369  120A  118A  	fcall	___awdiv
  1164  0708  0870               	movf	?___awdiv,w
  1165  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1166  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1167  070B  00B5               	movwf	??_main
  1168  070C  0835               	movf	??_main,w
  1169  070D  00C3               	movwf	main@year_1
  1170  070E                     l1572:
  1171                           
  1172                           ;main.c: 85:         Lcd_Clear();
  1173  070E  120A  158A  275A  120A  118A  	fcall	_Lcd_Clear
  1174  0713                     l1574:
  1175                           
  1176                           ;main.c: 86:         Lcd_Set_Cursor(1,1);
  1177  0713  01F4               	clrf	Lcd_Set_Cursor@b
  1178  0714  0AF4               	incf	Lcd_Set_Cursor@b,f
  1179  0715  3001               	movlw	1
  1180  0716  120A  118A  2155  120A  118A  	fcall	_Lcd_Set_Cursor
  1181  071B                     l1576:
  1182                           
  1183                           ;main.c: 87:         Lcd_Print_String(" TIME: ");
  1184  071B  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1185  071C  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1186  0721                     l1578:
  1187                           
  1188                           ;main.c: 88:         Lcd_Print_Char(hour_1+'0');
  1189  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0723  083D               	movf	main@hour_1,w
  1192  0724  3E30               	addlw	48
  1193  0725  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1194  072A                     l1580:
  1195                           
  1196                           ;main.c: 89:         Lcd_Print_Char(hour_0+'0');
  1197  072A  1283               	bcf	3,5	;RP0=0, select bank0
  1198  072B  1303               	bcf	3,6	;RP1=0, select bank0
  1199  072C  083C               	movf	main@hour_0,w
  1200  072D  3E30               	addlw	48
  1201  072E  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1202  0733                     l1582:
  1203                           
  1204                           ;main.c: 90:         Lcd_Print_Char(':');
  1205  0733  303A               	movlw	58
  1206  0734  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1207  0739                     l1584:
  1208                           
  1209                           ;main.c: 91:         Lcd_Print_Char(min_1+'0');
  1210  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1211  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1212  073B  083B               	movf	main@min_1,w
  1213  073C  3E30               	addlw	48
  1214  073D  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1215  0742                     l1586:
  1216                           
  1217                           ;main.c: 92:         Lcd_Print_Char(min_0+'0');
  1218  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0744  083A               	movf	main@min_0,w
  1221  0745  3E30               	addlw	48
  1222  0746  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1223  074B                     l1588:
  1224                           
  1225                           ;main.c: 93:         Lcd_Print_Char(':');
  1226  074B  303A               	movlw	58
  1227  074C  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1228  0751                     l1590:
  1229                           
  1230                           ;main.c: 94:         Lcd_Print_Char(sec_1+'0');
  1231  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0753  0839               	movf	main@sec_1,w
  1234  0754  3E30               	addlw	48
  1235  0755  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1236  075A                     l1592:
  1237                           
  1238                           ;main.c: 95:         Lcd_Print_Char(sec_0+'0');
  1239  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1240  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1241  075C  0838               	movf	main@sec_0,w
  1242  075D  3E30               	addlw	48
  1243  075E  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1244  0763                     l1594:
  1245                           
  1246                           ;main.c: 96:         Lcd_Set_Cursor(2,1);
  1247  0763  01F4               	clrf	Lcd_Set_Cursor@b
  1248  0764  0AF4               	incf	Lcd_Set_Cursor@b,f
  1249  0765  3002               	movlw	2
  1250  0766  120A  118A  2155  120A  118A  	fcall	_Lcd_Set_Cursor
  1251  076B                     l1596:
  1252                           
  1253                           ;main.c: 97:         Lcd_Print_String("Have A Good  Day");
  1254  076B  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1255  076C  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1256  0771                     l1598:
  1257                           
  1258                           ;main.c: 98:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1259  0771  300D               	movlw	13
  1260  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0774  00B7               	movwf	??_main+2
  1263  0775  30AF               	movlw	175
  1264  0776  00B6               	movwf	??_main+1
  1265  0777  30B5               	movlw	181
  1266  0778  00B5               	movwf	??_main
  1267  0779                     u1067:
  1268  0779  0BB5               	decfsz	??_main,f
  1269  077A  2F79               	goto	u1067
  1270  077B  0BB6               	decfsz	??_main+1,f
  1271  077C  2F79               	goto	u1067
  1272  077D  0BB7               	decfsz	??_main+2,f
  1273  077E  2F79               	goto	u1067
  1274  077F  2F80               	nop2
  1275  0780                     l1600:
  1276                           
  1277                           ;main.c: 101:         day_print(day);
  1278  0780  3004               	movlw	4
  1279  0781  00FC               	movwf	day_print@disp
  1280  0782  3000               	movlw	0
  1281  0783  00FD               	movwf	day_print@disp+1
  1282  0784  120A  118A  2307  120A  118A  	fcall	_day_print
  1283  0789                     l1602:
  1284                           
  1285                           ;main.c: 102:         Lcd_Set_Cursor(2,1);
  1286  0789  01F4               	clrf	Lcd_Set_Cursor@b
  1287  078A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1288  078B  3002               	movlw	2
  1289  078C  120A  118A  2155  120A  118A  	fcall	_Lcd_Set_Cursor
  1290  0791                     l1604:
  1291                           
  1292                           ;main.c: 103:         Lcd_Print_String("DATE: ");
  1293  0791  305B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1294  0792  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1295  0797                     l1606:
  1296                           
  1297                           ;main.c: 104:         Lcd_Print_Char(date_1+'0');
  1298  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0799  083F               	movf	main@date_1,w
  1301  079A  3E30               	addlw	48
  1302  079B  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1303  07A0                     l1608:
  1304                           
  1305                           ;main.c: 105:         Lcd_Print_Char(date_0+'0');
  1306  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1307  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1308  07A2  083E               	movf	main@date_0,w
  1309  07A3  3E30               	addlw	48
  1310  07A4  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1311  07A9                     l1610:
  1312                           
  1313                           ;main.c: 106:         Lcd_Print_Char('-');
  1314  07A9  302D               	movlw	45
  1315  07AA  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1316  07AF                     l1612:
  1317                           
  1318                           ;main.c: 107:         Lcd_Print_Char(month_1+'0');
  1319  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1320  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1321  07B1  0841               	movf	main@month_1,w
  1322  07B2  3E30               	addlw	48
  1323  07B3  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1324  07B8                     l1614:
  1325                           
  1326                           ;main.c: 108:         Lcd_Print_Char(month_0+'0');
  1327  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1328  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1329  07BA  0840               	movf	main@month_0,w
  1330  07BB  3E30               	addlw	48
  1331  07BC  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1332  07C1                     l1616:
  1333                           
  1334                           ;main.c: 109:         Lcd_Print_Char('-');
  1335  07C1  302D               	movlw	45
  1336  07C2  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1337  07C7                     l1618:
  1338                           
  1339                           ;main.c: 110:         Lcd_Print_Char(year_1+'0');
  1340  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1341  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1342  07C9  0843               	movf	main@year_1,w
  1343  07CA  3E30               	addlw	48
  1344  07CB  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1345  07D0                     l1620:
  1346                           
  1347                           ;main.c: 111:         Lcd_Print_Char(year_0+'0');
  1348  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1349  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1350  07D2  0842               	movf	main@year_0,w
  1351  07D3  3E30               	addlw	48
  1352  07D4  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1353  07D9                     l1622:
  1354                           
  1355                           ;main.c: 112:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1356  07D9  300D               	movlw	13
  1357  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1358  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1359  07DC  00B7               	movwf	??_main+2
  1360  07DD  30AF               	movlw	175
  1361  07DE  00B6               	movwf	??_main+1
  1362  07DF  30B5               	movlw	181
  1363  07E0  00B5               	movwf	??_main
  1364  07E1                     u1077:
  1365  07E1  0BB5               	decfsz	??_main,f
  1366  07E2  2FE1               	goto	u1077
  1367  07E3  0BB6               	decfsz	??_main+1,f
  1368  07E4  2FE1               	goto	u1077
  1369  07E5  0BB7               	decfsz	??_main+2,f
  1370  07E6  2FE1               	goto	u1077
  1371  07E7  2FE8               	nop2
  1372  07E8  2E23               	goto	l1546
  1373  07E9  120A  118A  2800   	ljmp	start
  1374  07EC                     __end_of_main:
  1375                           
  1376                           	psect	text1
  1377  0307                     __ptext1:	
  1378 ;; *************** function _day_print *****************
  1379 ;; Defined at:
  1380 ;;		line 119 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  disp            2   12[COMMON] unsigned int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         2       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0
  1397 ;;      Totals:         2       0       0       0       0
  1398 ;;Total ram usage:        2 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 3
  1401 ;; This function calls:
  1402 ;;		_Lcd_Clear
  1403 ;;		_Lcd_Print_String
  1404 ;;		_Lcd_Set_Cursor
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _day_print
  1412  0307                     _day_print:
  1413  0307                     l1500:	
  1414                           ;incstack = 0
  1415                           ; Regs used in _day_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1416                           
  1417                           
  1418                           ;main.c: 119: void day_print(unsigned int disp);main.c: 120: {;main.c: 121:     Lcd_Clea
      +                          r();
  1419  0307  120A  158A  275A  120A  118A  	fcall	_Lcd_Clear
  1420                           
  1421                           ;main.c: 122:     Lcd_Set_Cursor(1,1);
  1422  030C  01F4               	clrf	Lcd_Set_Cursor@b
  1423  030D  0AF4               	incf	Lcd_Set_Cursor@b,f
  1424  030E  3001               	movlw	1
  1425  030F  120A  118A  2155  120A  118A  	fcall	_Lcd_Set_Cursor
  1426  0314                     l1502:
  1427                           
  1428                           ;main.c: 123:     Lcd_Print_String("DAY: ");
  1429  0314  3077               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1430  0315  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1431                           
  1432                           ;main.c: 124:     switch(disp)
  1433  031A  2B4C               	goto	l1520
  1434  031B                     l1504:
  1435  031B  3070               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1436  031C  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1437                           
  1438                           ;main.c: 127:                break;
  1439  0321  2B68               	goto	l152
  1440  0322                     l1506:
  1441  0322  3069               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1442  0323  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1443                           
  1444                           ;main.c: 129:                break;
  1445  0328  2B68               	goto	l152
  1446  0329                     l1508:
  1447  0329  3053               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1448  032A  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1449                           
  1450                           ;main.c: 131:                break;
  1451  032F  2B68               	goto	l152
  1452  0330                     l1510:
  1453  0330  302F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1454  0331  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1455                           
  1456                           ;main.c: 133:                break;
  1457  0336  2B68               	goto	l152
  1458  0337                     l1512:
  1459  0337  3042               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1460  0338  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1461                           
  1462                           ;main.c: 135:                break;
  1463  033D  2B68               	goto	l152
  1464  033E                     l1514:
  1465  033E  3062               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1466  033F  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1467                           
  1468                           ;main.c: 137:                break;
  1469  0344  2B68               	goto	l152
  1470  0345                     l1516:
  1471  0345  3039               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1472  0346  120A  118A  208D  120A  118A  	fcall	_Lcd_Print_String
  1473                           
  1474                           ;main.c: 139:                break;
  1475  034B  2B68               	goto	l152
  1476  034C                     l1520:
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ; direct_byte           11     8 (fixed)
  1485                           ; jumptable            260     6 (fixed)
  1486                           ;	Chosen strategy is simple_byte
  1487  034C  087D               	movf	day_print@disp+1,w
  1488  034D  3A00               	xorlw	0	; case 0
  1489  034E  1903               	skipnz
  1490  034F  2B51               	goto	l1644
  1491  0350  2B68               	goto	l152
  1492  0351                     l1644:
  1493                           
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 7, Range of values is 1 to 7
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte           22    12 (average)
  1499                           ; direct_byte           32    11 (fixed)
  1500                           ; jumptable            263     9 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  0351  087C               	movf	day_print@disp,w
  1503  0352  3A01               	xorlw	1	; case 1
  1504  0353  1903               	skipnz
  1505  0354  2B1B               	goto	l1504
  1506  0355  3A03               	xorlw	3	; case 2
  1507  0356  1903               	skipnz
  1508  0357  2B22               	goto	l1506
  1509  0358  3A01               	xorlw	1	; case 3
  1510  0359  1903               	skipnz
  1511  035A  2B29               	goto	l1508
  1512  035B  3A07               	xorlw	7	; case 4
  1513  035C  1903               	skipnz
  1514  035D  2B30               	goto	l1510
  1515  035E  3A01               	xorlw	1	; case 5
  1516  035F  1903               	skipnz
  1517  0360  2B37               	goto	l1512
  1518  0361  3A03               	xorlw	3	; case 6
  1519  0362  1903               	skipnz
  1520  0363  2B3E               	goto	l1514
  1521  0364  3A01               	xorlw	1	; case 7
  1522  0365  1903               	skipnz
  1523  0366  2B45               	goto	l1516
  1524  0367  2B68               	goto	l152
  1525  0368                     l152:
  1526  0368  0008               	return
  1527  0369                     __end_of_day_print:
  1528                           
  1529                           	psect	text2
  1530  0155                     __ptext2:	
  1531 ;; *************** function _Lcd_Set_Cursor *****************
  1532 ;; Defined at:
  1533 ;;		line 54 in file "./lcd.h"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  a               1    wreg     unsigned char 
  1536 ;;  b               1    4[COMMON] unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  a               1    7[COMMON] unsigned char 
  1539 ;;  temp            1   10[COMMON] unsigned char 
  1540 ;;  y               1    9[COMMON] unsigned char 
  1541 ;;  z               1    8[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         1       0       0       0       0
  1552 ;;      Locals:         4       0       0       0       0
  1553 ;;      Temps:          2       0       0       0       0
  1554 ;;      Totals:         7       0       0       0       0
  1555 ;;Total ram usage:        7 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 2
  1558 ;; This function calls:
  1559 ;;		_Lcd_Cmd
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;;		_day_print
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _Lcd_Set_Cursor
  1568  0155                     _Lcd_Set_Cursor:
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1572                           ;Lcd_Set_Cursor@a stored from wreg
  1573  0155  00F7               	movwf	Lcd_Set_Cursor@a
  1574  0156                     l1350:
  1575                           
  1576                           ;./lcd.h: 54: void Lcd_Set_Cursor(char a, char b);./lcd.h: 55: {;./lcd.h: 56:     char t
      +                          emp,z,y;;./lcd.h: 57:     if(a== 1)
  1577  0156  0377               	decf	Lcd_Set_Cursor@a,w
  1578  0157  1D03               	btfss	3,2
  1579  0158  295A               	goto	u851
  1580  0159  295B               	goto	u850
  1581  015A                     u851:
  1582  015A  297E               	goto	l1360
  1583  015B                     u850:
  1584  015B                     l1352:
  1585                           
  1586                           ;./lcd.h: 58:     {;./lcd.h: 59:       temp = 0x80 + b - 1;
  1587  015B  0874               	movf	Lcd_Set_Cursor@b,w
  1588  015C  3E7F               	addlw	127
  1589  015D  00F5               	movwf	??_Lcd_Set_Cursor
  1590  015E  0875               	movf	??_Lcd_Set_Cursor,w
  1591  015F  00FA               	movwf	Lcd_Set_Cursor@temp
  1592                           
  1593                           ;./lcd.h: 60:         z = temp>>4;
  1594  0160  087A               	movf	Lcd_Set_Cursor@temp,w
  1595  0161  00F5               	movwf	??_Lcd_Set_Cursor
  1596  0162  3004               	movlw	4
  1597  0163                     u865:
  1598  0163  1003               	clrc
  1599  0164  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1600  0165  3EFF               	addlw	-1
  1601  0166  1D03               	skipz
  1602  0167  2963               	goto	u865
  1603  0168  0875               	movf	??_Lcd_Set_Cursor,w
  1604  0169  00F6               	movwf	??_Lcd_Set_Cursor+1
  1605  016A  0876               	movf	??_Lcd_Set_Cursor+1,w
  1606  016B  00F8               	movwf	Lcd_Set_Cursor@z
  1607  016C                     l1354:
  1608                           
  1609                           ;./lcd.h: 61:         y = temp & 0x0F;
  1610  016C  087A               	movf	Lcd_Set_Cursor@temp,w
  1611  016D  390F               	andlw	15
  1612  016E  00F5               	movwf	??_Lcd_Set_Cursor
  1613  016F  0875               	movf	??_Lcd_Set_Cursor,w
  1614  0170  00F9               	movwf	Lcd_Set_Cursor@y
  1615  0171                     l1356:
  1616                           
  1617                           ;./lcd.h: 62:         Lcd_Cmd(z);
  1618  0171  0878               	movf	Lcd_Set_Cursor@z,w
  1619  0172  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  1620  0177                     l1358:
  1621                           
  1622                           ;./lcd.h: 63:         Lcd_Cmd(y);
  1623  0177  0879               	movf	Lcd_Set_Cursor@y,w
  1624  0178  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  1625                           
  1626                           ;./lcd.h: 64:     }
  1627  017D  29A6               	goto	l81
  1628  017E                     l1360:
  1629  017E  3002               	movlw	2
  1630  017F  0677               	xorwf	Lcd_Set_Cursor@a,w
  1631  0180  1D03               	btfss	3,2
  1632  0181  2983               	goto	u871
  1633  0182  2984               	goto	u870
  1634  0183                     u871:
  1635  0183  29A6               	goto	l81
  1636  0184                     u870:
  1637  0184                     l1362:
  1638                           
  1639                           ;./lcd.h: 66:     {;./lcd.h: 67:         temp = 0xC0 + b - 1;
  1640  0184  0874               	movf	Lcd_Set_Cursor@b,w
  1641  0185  3EBF               	addlw	191
  1642  0186  00F5               	movwf	??_Lcd_Set_Cursor
  1643  0187  0875               	movf	??_Lcd_Set_Cursor,w
  1644  0188  00FA               	movwf	Lcd_Set_Cursor@temp
  1645                           
  1646                           ;./lcd.h: 68:         z = temp>>4;
  1647  0189  087A               	movf	Lcd_Set_Cursor@temp,w
  1648  018A  00F5               	movwf	??_Lcd_Set_Cursor
  1649  018B  3004               	movlw	4
  1650  018C                     u885:
  1651  018C  1003               	clrc
  1652  018D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1653  018E  3EFF               	addlw	-1
  1654  018F  1D03               	skipz
  1655  0190  298C               	goto	u885
  1656  0191  0875               	movf	??_Lcd_Set_Cursor,w
  1657  0192  00F6               	movwf	??_Lcd_Set_Cursor+1
  1658  0193  0876               	movf	??_Lcd_Set_Cursor+1,w
  1659  0194  00F8               	movwf	Lcd_Set_Cursor@z
  1660  0195                     l1364:
  1661                           
  1662                           ;./lcd.h: 69:         y = temp & 0x0F;
  1663  0195  087A               	movf	Lcd_Set_Cursor@temp,w
  1664  0196  390F               	andlw	15
  1665  0197  00F5               	movwf	??_Lcd_Set_Cursor
  1666  0198  0875               	movf	??_Lcd_Set_Cursor,w
  1667  0199  00F9               	movwf	Lcd_Set_Cursor@y
  1668  019A                     l1366:
  1669                           
  1670                           ;./lcd.h: 70:         Lcd_Cmd(z);
  1671  019A  0878               	movf	Lcd_Set_Cursor@z,w
  1672  019B  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  1673  01A0                     l1368:
  1674                           
  1675                           ;./lcd.h: 71:         Lcd_Cmd(y);
  1676  01A0  0879               	movf	Lcd_Set_Cursor@y,w
  1677  01A1  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  1678  01A6                     l81:
  1679  01A6  0008               	return
  1680  01A7                     __end_of_Lcd_Set_Cursor:
  1681                           
  1682                           	psect	text3
  1683  008D                     __ptext3:	
  1684 ;; *************** function _Lcd_Print_String *****************
  1685 ;; Defined at:
  1686 ;;		line 109 in file "./lcd.h"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  a               1    wreg     PTR unsigned char 
  1689 ;;		 -> STR_13(9), STR_12(7), STR_11(9), STR_10(10), 
  1690 ;;		 -> STR_9(8), STR_8(7), STR_7(7), STR_6(6), 
  1691 ;;		 -> STR_5(7), STR_4(17), STR_3(8), STR_2(12), 
  1692 ;;		 -> STR_1(17), 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  a               1   11[COMMON] PTR unsigned char 
  1695 ;;		 -> STR_13(9), STR_12(7), STR_11(9), STR_10(10), 
  1696 ;;		 -> STR_9(8), STR_8(7), STR_7(7), STR_6(6), 
  1697 ;;		 -> STR_5(7), STR_4(17), STR_3(8), STR_2(12), 
  1698 ;;		 -> STR_1(17), 
  1699 ;;  i               2    9[COMMON] int 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       0       0       0       0
  1710 ;;      Locals:         3       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0
  1712 ;;      Totals:         3       0       0       0       0
  1713 ;;Total ram usage:        3 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		_Lcd_Print_Char
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;;		_day_print
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _Lcd_Print_String
  1726  008D                     _Lcd_Print_String:
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1730                           ;Lcd_Print_String@a stored from wreg
  1731  008D  00FB               	movwf	Lcd_Print_String@a
  1732  008E                     l1370:
  1733                           
  1734                           ;./lcd.h: 109: void Lcd_Print_String(char *a);./lcd.h: 110: {;./lcd.h: 111:     int i;;.
      +                          /lcd.h: 112:     for(i=0;a[i]!='\0';i++)
  1735  008E  01F9               	clrf	Lcd_Print_String@i
  1736  008F  01FA               	clrf	Lcd_Print_String@i+1
  1737  0090  28A4               	goto	l1376
  1738  0091                     l1372:
  1739                           
  1740                           ;./lcd.h: 113:        Lcd_Print_Char(a[i]);
  1741  0091  0879               	movf	Lcd_Print_String@i,w
  1742  0092  077B               	addwf	Lcd_Print_String@a,w
  1743  0093  0084               	movwf	4
  1744  0094  120A  118A  2003  120A  118A  	fcall	stringdir
  1745  0099  120A  118A  22A8  120A  118A  	fcall	_Lcd_Print_Char
  1746  009E                     l1374:
  1747  009E  3001               	movlw	1
  1748  009F  07F9               	addwf	Lcd_Print_String@i,f
  1749  00A0  1803               	skipnc
  1750  00A1  0AFA               	incf	Lcd_Print_String@i+1,f
  1751  00A2  3000               	movlw	0
  1752  00A3  07FA               	addwf	Lcd_Print_String@i+1,f
  1753  00A4                     l1376:
  1754  00A4  0879               	movf	Lcd_Print_String@i,w
  1755  00A5  077B               	addwf	Lcd_Print_String@a,w
  1756  00A6  0084               	movwf	4
  1757  00A7  120A  118A  2003  120A  118A  	fcall	stringdir
  1758  00AC  3A00               	xorlw	0
  1759  00AD  1D03               	skipz
  1760  00AE  28B0               	goto	u891
  1761  00AF  28B1               	goto	u890
  1762  00B0                     u891:
  1763  00B0  2891               	goto	l1372
  1764  00B1                     u890:
  1765  00B1                     l99:
  1766  00B1  0008               	return
  1767  00B2                     __end_of_Lcd_Print_String:
  1768                           
  1769                           	psect	text4
  1770  02A8                     __ptext4:	
  1771 ;; *************** function _Lcd_Print_Char *****************
  1772 ;; Defined at:
  1773 ;;		line 93 in file "./lcd.h"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  data            1    wreg     unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  data            1    4[COMMON] unsigned char 
  1778 ;;  i               2    7[COMMON] int 
  1779 ;;  i               2    5[COMMON] int 
  1780 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  1781 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         7       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0
  1794 ;;      Totals:         8       0       0       0       0
  1795 ;;Total ram usage:        8 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		_Lcd_SetBit
  1800 ;; This function is called by:
  1801 ;;		_Lcd_Print_String
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _Lcd_Print_Char
  1808  02A8                     _Lcd_Print_Char:
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1812                           ;Lcd_Print_Char@data stored from wreg
  1813  02A8  00F4               	movwf	Lcd_Print_Char@data
  1814  02A9                     l1214:
  1815                           
  1816                           ;./lcd.h: 93: void Lcd_Print_Char(char data);./lcd.h: 94: {;./lcd.h: 95:    char Lower_N
      +                          ibble,Upper_Nibble;;./lcd.h: 96:    Lower_Nibble = data&0x0F;
  1817  02A9  0874               	movf	Lcd_Print_Char@data,w
  1818  02AA  390F               	andlw	15
  1819  02AB  00F1               	movwf	??_Lcd_Print_Char
  1820  02AC  0871               	movf	??_Lcd_Print_Char,w
  1821  02AD  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  1822                           
  1823                           ;./lcd.h: 97:    Upper_Nibble = data&0xF0;
  1824  02AE  0874               	movf	Lcd_Print_Char@data,w
  1825  02AF  39F0               	andlw	240
  1826  02B0  00F1               	movwf	??_Lcd_Print_Char
  1827  02B1  0871               	movf	??_Lcd_Print_Char,w
  1828  02B2  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  1829  02B3                     l1216:
  1830                           
  1831                           ;./lcd.h: 98:    RD2 = 1;
  1832  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1833  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1834  02B5  1508               	bsf	8,2	;volatile
  1835  02B6                     l1218:
  1836                           
  1837                           ;./lcd.h: 99:    Lcd_SetBit(Upper_Nibble>>4);
  1838  02B6  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  1839  02B7  00F1               	movwf	??_Lcd_Print_Char
  1840  02B8  3004               	movlw	4
  1841  02B9                     u575:
  1842  02B9  1003               	clrc
  1843  02BA  0CF1               	rrf	??_Lcd_Print_Char,f
  1844  02BB  3EFF               	addlw	-1
  1845  02BC  1D03               	skipz
  1846  02BD  2AB9               	goto	u575
  1847  02BE  0871               	movf	??_Lcd_Print_Char,w
  1848  02BF  120A  158A  2794  120A  118A  	fcall	_Lcd_SetBit
  1849  02C4                     l1220:
  1850                           
  1851                           ;./lcd.h: 100:    RD3 = 1;
  1852  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1853  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1854  02C6  1588               	bsf	8,3	;volatile
  1855  02C7                     l1222:
  1856                           
  1857                           ;./lcd.h: 101:    for(int i=2130483; i<=0; i--) __nop();
  1858  02C7  3033               	movlw	51
  1859  02C8  00F5               	movwf	Lcd_Print_Char@i
  1860  02C9  3082               	movlw	130
  1861  02CA  00F6               	movwf	Lcd_Print_Char@i+1
  1862  02CB                     l89:
  1863  02CB  0000               	nop
  1864  02CC                     l1228:
  1865  02CC  30FF               	movlw	255
  1866  02CD  07F5               	addwf	Lcd_Print_Char@i,f
  1867  02CE  1803               	skipnc
  1868  02CF  0AF6               	incf	Lcd_Print_Char@i+1,f
  1869  02D0  30FF               	movlw	255
  1870  02D1  07F6               	addwf	Lcd_Print_Char@i+1,f
  1871  02D2                     l1230:
  1872  02D2  0876               	movf	Lcd_Print_Char@i+1,w
  1873  02D3  3A80               	xorlw	128
  1874  02D4  00FF               	movwf	btemp+1
  1875  02D5  3080               	movlw	128
  1876  02D6  027F               	subwf	btemp+1,w
  1877  02D7  1D03               	skipz
  1878  02D8  2ADB               	goto	u585
  1879  02D9  3001               	movlw	1
  1880  02DA  0275               	subwf	Lcd_Print_Char@i,w
  1881  02DB                     u585:
  1882  02DB  1C03               	skipc
  1883  02DC  2ADE               	goto	u581
  1884  02DD  2ADF               	goto	u580
  1885  02DE                     u581:
  1886  02DE  2ACB               	goto	l89
  1887  02DF                     u580:
  1888  02DF                     l90:
  1889                           
  1890                           ;./lcd.h: 102:    RD3 = 0;
  1891  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1892  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1893  02E1  1188               	bcf	8,3	;volatile
  1894  02E2                     l1232:
  1895                           
  1896                           ;./lcd.h: 103:    Lcd_SetBit(Lower_Nibble);
  1897  02E2  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  1898  02E3  120A  158A  2794  120A  118A  	fcall	_Lcd_SetBit
  1899  02E8                     l1234:
  1900                           
  1901                           ;./lcd.h: 104:    RD3 = 1;
  1902  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1903  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1904  02EA  1588               	bsf	8,3	;volatile
  1905  02EB                     l1236:
  1906                           
  1907                           ;./lcd.h: 105:    for(int i=2130483; i<=0; i--) __nop();
  1908  02EB  3033               	movlw	51
  1909  02EC  00F7               	movwf	Lcd_Print_Char@i_83
  1910  02ED  3082               	movlw	130
  1911  02EE  00F8               	movwf	Lcd_Print_Char@i_83+1
  1912  02EF                     l91:
  1913  02EF  0000               	nop
  1914  02F0                     l1242:
  1915  02F0  30FF               	movlw	255
  1916  02F1  07F7               	addwf	Lcd_Print_Char@i_83,f
  1917  02F2  1803               	skipnc
  1918  02F3  0AF8               	incf	Lcd_Print_Char@i_83+1,f
  1919  02F4  30FF               	movlw	255
  1920  02F5  07F8               	addwf	Lcd_Print_Char@i_83+1,f
  1921  02F6                     l1244:
  1922  02F6  0878               	movf	Lcd_Print_Char@i_83+1,w
  1923  02F7  3A80               	xorlw	128
  1924  02F8  00FF               	movwf	btemp+1
  1925  02F9  3080               	movlw	128
  1926  02FA  027F               	subwf	btemp+1,w
  1927  02FB  1D03               	skipz
  1928  02FC  2AFF               	goto	u595
  1929  02FD  3001               	movlw	1
  1930  02FE  0277               	subwf	Lcd_Print_Char@i_83,w
  1931  02FF                     u595:
  1932  02FF  1C03               	skipc
  1933  0300  2B02               	goto	u591
  1934  0301  2B03               	goto	u590
  1935  0302                     u591:
  1936  0302  2AEF               	goto	l91
  1937  0303                     u590:
  1938  0303                     l92:
  1939                           
  1940                           ;./lcd.h: 106:    RD3 = 0;
  1941  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0305  1188               	bcf	8,3	;volatile
  1944  0306                     l93:
  1945  0306  0008               	return
  1946  0307                     __end_of_Lcd_Print_Char:
  1947                           
  1948                           	psect	text5
  1949  0F5A                     __ptext5:	
  1950 ;; *************** function _Lcd_Clear *****************
  1951 ;; Defined at:
  1952 ;;		line 48 in file "./lcd.h"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2   74[None  ] int 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         0       0       0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 2
  1973 ;; This function calls:
  1974 ;;		_Lcd_Cmd
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;;		_day_print
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _Lcd_Clear
  1983  0F5A                     _Lcd_Clear:
  1984  0F5A                     l1348:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1987                           
  1988                           
  1989                           ;./lcd.h: 50:     Lcd_Cmd(0);
  1990  0F5A  3000               	movlw	0
  1991  0F5B  120A  158A  277A  120A  158A  	fcall	_Lcd_Cmd
  1992                           
  1993                           ;./lcd.h: 51:     Lcd_Cmd(1);
  1994  0F60  3001               	movlw	1
  1995  0F61  120A  158A  277A  120A  158A  	fcall	_Lcd_Cmd
  1996  0F66                     l75:
  1997  0F66  0008               	return
  1998  0F67                     __end_of_Lcd_Clear:
  1999                           
  2000                           	psect	text6
  2001  04E7                     __ptext6:	
  2002 ;; *************** function _Update_Current_Date_Time *****************
  2003 ;; Defined at:
  2004 ;;		line 32 in file "./PIC16F877a_DS3231.h"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 2
  2025 ;; This function calls:
  2026 ;;		_BCD_2_DEC
  2027 ;;		_I2C_Begin
  2028 ;;		_I2C_End
  2029 ;;		_I2C_Read
  2030 ;;		_I2C_Write
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _Update_Current_Date_Time
  2038  04E7                     _Update_Current_Date_Time:
  2039  04E7                     l1498:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  2042                           
  2043                           
  2044                           ;./PIC16F877a_DS3231.h: 35:    I2C_Begin();
  2045  04E7  120A  158A  2725  120A  118A  	fcall	_I2C_Begin
  2046                           
  2047                           ;./PIC16F877a_DS3231.h: 36:    I2C_Write(0xD0);
  2048  04EC  30D0               	movlw	208
  2049  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2050  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2051  04EF  00A0               	movwf	I2C_Write@data
  2052  04F0  3000               	movlw	0
  2053  04F1  00A1               	movwf	I2C_Write@data+1
  2054  04F2  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2055                           
  2056                           ;./PIC16F877a_DS3231.h: 37:    I2C_Write(0);
  2057  04F7  3000               	movlw	0
  2058  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2059  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2060  04FA  00A0               	movwf	I2C_Write@data
  2061  04FB  00A1               	movwf	I2C_Write@data+1
  2062  04FC  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2063                           
  2064                           ;./PIC16F877a_DS3231.h: 38:    I2C_End();
  2065  0501  120A  158A  272E  120A  118A  	fcall	_I2C_End
  2066                           
  2067                           ;./PIC16F877a_DS3231.h: 41:    I2C_Begin();
  2068  0506  120A  158A  2725  120A  118A  	fcall	_I2C_Begin
  2069                           
  2070                           ;./PIC16F877a_DS3231.h: 42:    I2C_Write(0xD1);
  2071  050B  30D1               	movlw	209
  2072  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2073  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2074  050E  00A0               	movwf	I2C_Write@data
  2075  050F  3000               	movlw	0
  2076  0510  00A1               	movwf	I2C_Write@data+1
  2077  0511  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2078                           
  2079                           ;./PIC16F877a_DS3231.h: 43:    sec = BCD_2_DEC(I2C_Read(1));
  2080  0516  3001               	movlw	1
  2081  0517  00F0               	movwf	I2C_Read@ack
  2082  0518  3000               	movlw	0
  2083  0519  00F1               	movwf	I2C_Read@ack+1
  2084  051A  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2085  051F  0871               	movf	?_I2C_Read+1,w
  2086  0520  00F7               	movwf	BCD_2_DEC@to_convert+1
  2087  0521  0870               	movf	?_I2C_Read,w
  2088  0522  00F6               	movwf	BCD_2_DEC@to_convert
  2089  0523  120A  158A  27DB  120A  118A  	fcall	_BCD_2_DEC
  2090  0528  0877               	movf	?_BCD_2_DEC+1,w
  2091  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2092  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2093  052B  00D1               	movwf	_sec+1
  2094  052C  0876               	movf	?_BCD_2_DEC,w
  2095  052D  00D0               	movwf	_sec
  2096                           
  2097                           ;./PIC16F877a_DS3231.h: 44:    min = BCD_2_DEC(I2C_Read(1));
  2098  052E  3001               	movlw	1
  2099  052F  00F0               	movwf	I2C_Read@ack
  2100  0530  3000               	movlw	0
  2101  0531  00F1               	movwf	I2C_Read@ack+1
  2102  0532  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2103  0537  0871               	movf	?_I2C_Read+1,w
  2104  0538  00F7               	movwf	BCD_2_DEC@to_convert+1
  2105  0539  0870               	movf	?_I2C_Read,w
  2106  053A  00F6               	movwf	BCD_2_DEC@to_convert
  2107  053B  120A  158A  27DB  120A  118A  	fcall	_BCD_2_DEC
  2108  0540  0877               	movf	?_BCD_2_DEC+1,w
  2109  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0543  00CF               	movwf	_min+1
  2112  0544  0876               	movf	?_BCD_2_DEC,w
  2113  0545  00CE               	movwf	_min
  2114                           
  2115                           ;./PIC16F877a_DS3231.h: 45:    hour = BCD_2_DEC(I2C_Read(1));
  2116  0546  3001               	movlw	1
  2117  0547  00F0               	movwf	I2C_Read@ack
  2118  0548  3000               	movlw	0
  2119  0549  00F1               	movwf	I2C_Read@ack+1
  2120  054A  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2121  054F  0871               	movf	?_I2C_Read+1,w
  2122  0550  00F7               	movwf	BCD_2_DEC@to_convert+1
  2123  0551  0870               	movf	?_I2C_Read,w
  2124  0552  00F6               	movwf	BCD_2_DEC@to_convert
  2125  0553  120A  158A  27DB  120A  118A  	fcall	_BCD_2_DEC
  2126  0558  0877               	movf	?_BCD_2_DEC+1,w
  2127  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2128  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2129  055B  00CD               	movwf	_hour+1
  2130  055C  0876               	movf	?_BCD_2_DEC,w
  2131  055D  00CC               	movwf	_hour
  2132                           
  2133                           ;./PIC16F877a_DS3231.h: 46:    I2C_Read(1);
  2134  055E  3001               	movlw	1
  2135  055F  00F0               	movwf	I2C_Read@ack
  2136  0560  3000               	movlw	0
  2137  0561  00F1               	movwf	I2C_Read@ack+1
  2138  0562  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2139                           
  2140                           ;./PIC16F877a_DS3231.h: 47:    date = BCD_2_DEC(I2C_Read(1));
  2141  0567  3001               	movlw	1
  2142  0568  00F0               	movwf	I2C_Read@ack
  2143  0569  3000               	movlw	0
  2144  056A  00F1               	movwf	I2C_Read@ack+1
  2145  056B  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2146  0570  0871               	movf	?_I2C_Read+1,w
  2147  0571  00F7               	movwf	BCD_2_DEC@to_convert+1
  2148  0572  0870               	movf	?_I2C_Read,w
  2149  0573  00F6               	movwf	BCD_2_DEC@to_convert
  2150  0574  120A  158A  27DB  120A  118A  	fcall	_BCD_2_DEC
  2151  0579  0877               	movf	?_BCD_2_DEC+1,w
  2152  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2153  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2154  057C  00C9               	movwf	_date+1
  2155  057D  0876               	movf	?_BCD_2_DEC,w
  2156  057E  00C8               	movwf	_date
  2157                           
  2158                           ;./PIC16F877a_DS3231.h: 48:    month = BCD_2_DEC(I2C_Read(1));
  2159  057F  3001               	movlw	1
  2160  0580  00F0               	movwf	I2C_Read@ack
  2161  0581  3000               	movlw	0
  2162  0582  00F1               	movwf	I2C_Read@ack+1
  2163  0583  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2164  0588  0871               	movf	?_I2C_Read+1,w
  2165  0589  00F7               	movwf	BCD_2_DEC@to_convert+1
  2166  058A  0870               	movf	?_I2C_Read,w
  2167  058B  00F6               	movwf	BCD_2_DEC@to_convert
  2168  058C  120A  158A  27DB  120A  118A  	fcall	_BCD_2_DEC
  2169  0591  0877               	movf	?_BCD_2_DEC+1,w
  2170  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0594  00C7               	movwf	_month+1
  2173  0595  0876               	movf	?_BCD_2_DEC,w
  2174  0596  00C6               	movwf	_month
  2175                           
  2176                           ;./PIC16F877a_DS3231.h: 49:    year = BCD_2_DEC(I2C_Read(1));
  2177  0597  3001               	movlw	1
  2178  0598  00F0               	movwf	I2C_Read@ack
  2179  0599  3000               	movlw	0
  2180  059A  00F1               	movwf	I2C_Read@ack+1
  2181  059B  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2182  05A0  0871               	movf	?_I2C_Read+1,w
  2183  05A1  00F7               	movwf	BCD_2_DEC@to_convert+1
  2184  05A2  0870               	movf	?_I2C_Read,w
  2185  05A3  00F6               	movwf	BCD_2_DEC@to_convert
  2186  05A4  120A  158A  27DB  120A  118A  	fcall	_BCD_2_DEC
  2187  05A9  0877               	movf	?_BCD_2_DEC+1,w
  2188  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2189  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2190  05AC  00C5               	movwf	_year+1
  2191  05AD  0876               	movf	?_BCD_2_DEC,w
  2192  05AE  00C4               	movwf	_year
  2193                           
  2194                           ;./PIC16F877a_DS3231.h: 50:    I2C_End();
  2195  05AF  120A  158A  272E  120A  118A  	fcall	_I2C_End
  2196                           
  2197                           ;./PIC16F877a_DS3231.h: 53:     I2C_Begin();
  2198  05B4  120A  158A  2725  120A  118A  	fcall	_I2C_Begin
  2199                           
  2200                           ;./PIC16F877a_DS3231.h: 54:     I2C_Write(0xD1);
  2201  05B9  30D1               	movlw	209
  2202  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2203  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2204  05BC  00A0               	movwf	I2C_Write@data
  2205  05BD  3000               	movlw	0
  2206  05BE  00A1               	movwf	I2C_Write@data+1
  2207  05BF  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2208                           
  2209                           ;./PIC16F877a_DS3231.h: 55:     I2C_Read(1);
  2210  05C4  3001               	movlw	1
  2211  05C5  00F0               	movwf	I2C_Read@ack
  2212  05C6  3000               	movlw	0
  2213  05C7  00F1               	movwf	I2C_Read@ack+1
  2214  05C8  120A  118A  20B2  120A  118A  	fcall	_I2C_Read
  2215                           
  2216                           ;./PIC16F877a_DS3231.h: 56:     I2C_End();
  2217  05CD  120A  158A  272E  120A  118A  	fcall	_I2C_End
  2218  05D2                     l132:
  2219  05D2  0008               	return
  2220  05D3                     __end_of_Update_Current_Date_Time:
  2221                           
  2222                           	psect	text7
  2223  00B2                     __ptext7:	
  2224 ;; *************** function _I2C_Read *****************
  2225 ;; Defined at:
  2226 ;;		line 46 in file "./PIC16F877a_I2C.h"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  ack             2    0[COMMON] unsigned short 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  incoming        2    4[COMMON] unsigned short 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2    0[COMMON] unsigned short 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         2       0       0       0       0
  2241 ;;      Locals:         2       0       0       0       0
  2242 ;;      Temps:          2       0       0       0       0
  2243 ;;      Totals:         6       0       0       0       0
  2244 ;;Total ram usage:        6 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 1
  2247 ;; This function calls:
  2248 ;;		_I2C_Hold
  2249 ;; This function is called by:
  2250 ;;		_Update_Current_Date_Time
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _I2C_Read
  2256  00B2                     _I2C_Read:
  2257  00B2                     l1390:	
  2258                           ;incstack = 0
  2259                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2260                           
  2261                           
  2262                           ;./PIC16F877a_I2C.h: 46: unsigned short I2C_Read(unsigned short ack);./PIC16F877a_I2C.h:
      +                           47: {;./PIC16F877a_I2C.h: 48:   unsigned short incoming;;./PIC16F877a_I2C.h: 49:   I2C_
      +                          Hold();
  2263  00B2  120A  158A  274D  120A  118A  	fcall	_I2C_Hold
  2264  00B7                     l1392:
  2265                           
  2266                           ;./PIC16F877a_I2C.h: 50:   RCEN = 1;
  2267  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2268  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2269  00B9  1591               	bsf	17,3	;volatile
  2270                           
  2271                           ;./PIC16F877a_I2C.h: 52:   I2C_Hold();
  2272  00BA  120A  158A  274D  120A  118A  	fcall	_I2C_Hold
  2273  00BF                     l1394:
  2274                           
  2275                           ;./PIC16F877a_I2C.h: 53:   incoming = SSPBUF;
  2276  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2277  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  2278  00C1  0813               	movf	19,w	;volatile
  2279  00C2  00F2               	movwf	??_I2C_Read
  2280  00C3  01F3               	clrf	??_I2C_Read+1
  2281  00C4  0872               	movf	??_I2C_Read,w
  2282  00C5  00F4               	movwf	I2C_Read@incoming
  2283  00C6  0873               	movf	??_I2C_Read+1,w
  2284  00C7  00F5               	movwf	I2C_Read@incoming+1
  2285  00C8                     l1396:
  2286                           
  2287                           ;./PIC16F877a_I2C.h: 55:   I2C_Hold();
  2288  00C8  120A  158A  274D  120A  118A  	fcall	_I2C_Hold
  2289  00CD                     l1398:
  2290                           
  2291                           ;./PIC16F877a_I2C.h: 56:   ACKDT = (ack)?0:1;
  2292  00CD  0870               	movf	I2C_Read@ack,w
  2293  00CE  0471               	iorwf	I2C_Read@ack+1,w
  2294  00CF  1903               	btfsc	3,2
  2295  00D0  28D2               	goto	u901
  2296  00D1  28D6               	goto	u900
  2297  00D2                     u901:
  2298  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  2299  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  2300  00D4  1691               	bsf	17,5	;volatile
  2301  00D5  28D9               	goto	u914
  2302  00D6                     u900:
  2303  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  2304  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  2305  00D8  1291               	bcf	17,5	;volatile
  2306  00D9                     u914:
  2307  00D9                     l1400:
  2308                           
  2309                           ;./PIC16F877a_I2C.h: 57:   ACKEN = 1;
  2310  00D9  1611               	bsf	17,4	;volatile
  2311  00DA                     l1402:
  2312                           
  2313                           ;./PIC16F877a_I2C.h: 59:   return incoming;
  2314  00DA  0875               	movf	I2C_Read@incoming+1,w
  2315  00DB  00F1               	movwf	?_I2C_Read+1
  2316  00DC  0874               	movf	I2C_Read@incoming,w
  2317  00DD  00F0               	movwf	?_I2C_Read
  2318  00DE                     l120:
  2319  00DE  0008               	return
  2320  00DF                     __end_of_I2C_Read:
  2321                           
  2322                           	psect	text8
  2323  0FDB                     __ptext8:	
  2324 ;; *************** function _BCD_2_DEC *****************
  2325 ;; Defined at:
  2326 ;;		line 7 in file "./PIC16F877a_DS3231.h"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  to_convert      2    6[COMMON] int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2    6[COMMON] int 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         2       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0
  2342 ;;      Temps:          2       0       0       0       0
  2343 ;;      Totals:         4       0       0       0       0
  2344 ;;Total ram usage:        4 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 1
  2347 ;; This function calls:
  2348 ;;		___wmul
  2349 ;; This function is called by:
  2350 ;;		_Update_Current_Date_Time
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _BCD_2_DEC
  2356  0FDB                     _BCD_2_DEC:
  2357  0FDB                     l1406:	
  2358                           ;incstack = 0
  2359                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  2360                           
  2361                           
  2362                           ;./PIC16F877a_DS3231.h: 7: int BCD_2_DEC(int to_convert);./PIC16F877a_DS3231.h: 8: {;./P
      +                          IC16F877a_DS3231.h: 9:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  2363  0FDB  300F               	movlw	15
  2364  0FDC  0576               	andwf	BCD_2_DEC@to_convert,w
  2365  0FDD  00F8               	movwf	??_BCD_2_DEC
  2366  0FDE  3000               	movlw	0
  2367  0FDF  0577               	andwf	BCD_2_DEC@to_convert+1,w
  2368  0FE0  00F9               	movwf	??_BCD_2_DEC+1
  2369  0FE1  0E76               	swapf	BCD_2_DEC@to_convert,w
  2370  0FE2  390F               	andlw	15
  2371  0FE3  00F0               	movwf	___wmul@multiplier
  2372  0FE4  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  2373  0FE5  39F0               	andlw	240
  2374  0FE6  04F0               	iorwf	___wmul@multiplier,f
  2375  0FE7  0E77               	swapf	BCD_2_DEC@to_convert+1,w
  2376  0FE8  390F               	andlw	15
  2377  0FE9  00F1               	movwf	___wmul@multiplier+1
  2378  0FEA  30F0               	movlw	240
  2379  0FEB  1DF1               	btfss	___wmul@multiplier+1,3
  2380  0FEC  3000               	movlw	0
  2381  0FED  04F1               	iorwf	___wmul@multiplier+1,f
  2382  0FEE  300A               	movlw	10
  2383  0FEF  00F2               	movwf	___wmul@multiplicand
  2384  0FF0  3000               	movlw	0
  2385  0FF1  00F3               	movwf	___wmul@multiplicand+1
  2386  0FF2  120A  158A  27B6  120A  158A  	fcall	___wmul
  2387  0FF7  0878               	movf	??_BCD_2_DEC,w
  2388  0FF8  0770               	addwf	?___wmul,w
  2389  0FF9  00F6               	movwf	?_BCD_2_DEC
  2390  0FFA  0879               	movf	??_BCD_2_DEC+1,w
  2391  0FFB  1803               	skipnc
  2392  0FFC  0A79               	incf	??_BCD_2_DEC+1,w
  2393  0FFD  0771               	addwf	?___wmul+1,w
  2394  0FFE  00F7               	movwf	?_BCD_2_DEC+1
  2395  0FFF                     l123:
  2396  0FFF  0008               	return
  2397  1000                     __end_of_BCD_2_DEC:
  2398                           
  2399                           	psect	text9
  2400  0FB6                     __ptext9:	
  2401 ;; *************** function ___wmul *****************
  2402 ;; Defined at:
  2403 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  multiplier      2    0[COMMON] unsigned int 
  2406 ;;  multiplicand    2    2[COMMON] unsigned int 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  product         2    4[COMMON] unsigned int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    0[COMMON] unsigned int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         4       0       0       0       0
  2419 ;;      Locals:         2       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         6       0       0       0       0
  2422 ;;Total ram usage:        6 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_BCD_2_DEC
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function ___wmul
  2433  0FB6                     ___wmul:
  2434  0FB6                     l1252:	
  2435                           ;incstack = 0
  2436                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2437                           
  2438  0FB6  01F4               	clrf	___wmul@product
  2439  0FB7  01F5               	clrf	___wmul@product+1
  2440  0FB8                     l1254:
  2441  0FB8  1C70               	btfss	___wmul@multiplier,0
  2442  0FB9  2FBB               	goto	u621
  2443  0FBA  2FBC               	goto	u620
  2444  0FBB                     u621:
  2445  0FBB  2FC2               	goto	l238
  2446  0FBC                     u620:
  2447  0FBC                     l1256:
  2448  0FBC  0872               	movf	___wmul@multiplicand,w
  2449  0FBD  07F4               	addwf	___wmul@product,f
  2450  0FBE  1803               	skipnc
  2451  0FBF  0AF5               	incf	___wmul@product+1,f
  2452  0FC0  0873               	movf	___wmul@multiplicand+1,w
  2453  0FC1  07F5               	addwf	___wmul@product+1,f
  2454  0FC2                     l238:
  2455  0FC2  3001               	movlw	1
  2456  0FC3                     u635:
  2457  0FC3  1003               	clrc
  2458  0FC4  0DF2               	rlf	___wmul@multiplicand,f
  2459  0FC5  0DF3               	rlf	___wmul@multiplicand+1,f
  2460  0FC6  3EFF               	addlw	-1
  2461  0FC7  1D03               	skipz
  2462  0FC8  2FC3               	goto	u635
  2463  0FC9                     l1258:
  2464  0FC9  3001               	movlw	1
  2465  0FCA                     u645:
  2466  0FCA  1003               	clrc
  2467  0FCB  0CF1               	rrf	___wmul@multiplier+1,f
  2468  0FCC  0CF0               	rrf	___wmul@multiplier,f
  2469  0FCD  3EFF               	addlw	-1
  2470  0FCE  1D03               	skipz
  2471  0FCF  2FCA               	goto	u645
  2472  0FD0                     l1260:
  2473  0FD0  0870               	movf	___wmul@multiplier,w
  2474  0FD1  0471               	iorwf	___wmul@multiplier+1,w
  2475  0FD2  1D03               	btfss	3,2
  2476  0FD3  2FD5               	goto	u651
  2477  0FD4  2FD6               	goto	u650
  2478  0FD5                     u651:
  2479  0FD5  2FB8               	goto	l1254
  2480  0FD6                     u650:
  2481  0FD6                     l1262:
  2482  0FD6  0875               	movf	___wmul@product+1,w
  2483  0FD7  00F1               	movwf	?___wmul+1
  2484  0FD8  0874               	movf	___wmul@product,w
  2485  0FD9  00F0               	movwf	?___wmul
  2486  0FDA                     l240:
  2487  0FDA  0008               	return
  2488  0FDB                     __end_of___wmul:
  2489                           
  2490                           	psect	text10
  2491  0438                     __ptext10:	
  2492 ;; *************** function _Set_Time_Date *****************
  2493 ;; Defined at:
  2494 ;;		line 17 in file "./PIC16F877a_DS3231.h"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 2
  2515 ;; This function calls:
  2516 ;;		_DEC_2_BCD
  2517 ;;		_I2C_Begin
  2518 ;;		_I2C_End
  2519 ;;		_I2C_Write
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _Set_Time_Date
  2527  0438                     _Set_Time_Date:
  2528  0438                     l1496:	
  2529                           ;incstack = 0
  2530                           ; Regs used in _Set_Time_Date: [wreg+status,2+status,0+pclath+cstack]
  2531                           
  2532                           
  2533                           ;./PIC16F877a_DS3231.h: 19:    I2C_Begin();
  2534  0438  120A  158A  2725  120A  118A  	fcall	_I2C_Begin
  2535                           
  2536                           ;./PIC16F877a_DS3231.h: 20:    I2C_Write(0xD0);
  2537  043D  30D0               	movlw	208
  2538  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2539  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0440  00A0               	movwf	I2C_Write@data
  2541  0441  3000               	movlw	0
  2542  0442  00A1               	movwf	I2C_Write@data+1
  2543  0443  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2544                           
  2545                           ;./PIC16F877a_DS3231.h: 21:    I2C_Write(0);
  2546  0448  3000               	movlw	0
  2547  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2548  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2549  044B  00A0               	movwf	I2C_Write@data
  2550  044C  00A1               	movwf	I2C_Write@data+1
  2551  044D  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2552                           
  2553                           ;./PIC16F877a_DS3231.h: 22:    I2C_Write(DEC_2_BCD(sec));
  2554  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0454  0851               	movf	_sec+1,w
  2557  0455  00FA               	movwf	DEC_2_BCD@to_convert+1
  2558  0456  0850               	movf	_sec,w
  2559  0457  00F9               	movwf	DEC_2_BCD@to_convert
  2560  0458  120A  118A  20DF  120A  118A  	fcall	_DEC_2_BCD
  2561  045D  087A               	movf	?_DEC_2_BCD+1,w
  2562  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2563  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0460  00A1               	movwf	I2C_Write@data+1
  2565  0461  0879               	movf	?_DEC_2_BCD,w
  2566  0462  00A0               	movwf	I2C_Write@data
  2567  0463  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2568                           
  2569                           ;./PIC16F877a_DS3231.h: 23:    I2C_Write(DEC_2_BCD(min));
  2570  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2572  046A  084F               	movf	_min+1,w
  2573  046B  00FA               	movwf	DEC_2_BCD@to_convert+1
  2574  046C  084E               	movf	_min,w
  2575  046D  00F9               	movwf	DEC_2_BCD@to_convert
  2576  046E  120A  118A  20DF  120A  118A  	fcall	_DEC_2_BCD
  2577  0473  087A               	movf	?_DEC_2_BCD+1,w
  2578  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0476  00A1               	movwf	I2C_Write@data+1
  2581  0477  0879               	movf	?_DEC_2_BCD,w
  2582  0478  00A0               	movwf	I2C_Write@data
  2583  0479  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2584                           
  2585                           ;./PIC16F877a_DS3231.h: 24:    I2C_Write(DEC_2_BCD(hour));
  2586  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2587  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0480  084D               	movf	_hour+1,w
  2589  0481  00FA               	movwf	DEC_2_BCD@to_convert+1
  2590  0482  084C               	movf	_hour,w
  2591  0483  00F9               	movwf	DEC_2_BCD@to_convert
  2592  0484  120A  118A  20DF  120A  118A  	fcall	_DEC_2_BCD
  2593  0489  087A               	movf	?_DEC_2_BCD+1,w
  2594  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2595  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2596  048C  00A1               	movwf	I2C_Write@data+1
  2597  048D  0879               	movf	?_DEC_2_BCD,w
  2598  048E  00A0               	movwf	I2C_Write@data
  2599  048F  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2600                           
  2601                           ;./PIC16F877a_DS3231.h: 25:    I2C_Write(1);
  2602  0494  3001               	movlw	1
  2603  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0497  00A0               	movwf	I2C_Write@data
  2606  0498  3000               	movlw	0
  2607  0499  00A1               	movwf	I2C_Write@data+1
  2608  049A  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2609                           
  2610                           ;./PIC16F877a_DS3231.h: 26:    I2C_Write(DEC_2_BCD(date));
  2611  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2612  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2613  04A1  0849               	movf	_date+1,w
  2614  04A2  00FA               	movwf	DEC_2_BCD@to_convert+1
  2615  04A3  0848               	movf	_date,w
  2616  04A4  00F9               	movwf	DEC_2_BCD@to_convert
  2617  04A5  120A  118A  20DF  120A  118A  	fcall	_DEC_2_BCD
  2618  04AA  087A               	movf	?_DEC_2_BCD+1,w
  2619  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2620  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2621  04AD  00A1               	movwf	I2C_Write@data+1
  2622  04AE  0879               	movf	?_DEC_2_BCD,w
  2623  04AF  00A0               	movwf	I2C_Write@data
  2624  04B0  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2625                           
  2626                           ;./PIC16F877a_DS3231.h: 27:    I2C_Write(DEC_2_BCD(month));
  2627  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2628  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2629  04B7  0847               	movf	_month+1,w
  2630  04B8  00FA               	movwf	DEC_2_BCD@to_convert+1
  2631  04B9  0846               	movf	_month,w
  2632  04BA  00F9               	movwf	DEC_2_BCD@to_convert
  2633  04BB  120A  118A  20DF  120A  118A  	fcall	_DEC_2_BCD
  2634  04C0  087A               	movf	?_DEC_2_BCD+1,w
  2635  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2636  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2637  04C3  00A1               	movwf	I2C_Write@data+1
  2638  04C4  0879               	movf	?_DEC_2_BCD,w
  2639  04C5  00A0               	movwf	I2C_Write@data
  2640  04C6  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2641                           
  2642                           ;./PIC16F877a_DS3231.h: 28:    I2C_Write(DEC_2_BCD(year));
  2643  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2644  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2645  04CD  0845               	movf	_year+1,w
  2646  04CE  00FA               	movwf	DEC_2_BCD@to_convert+1
  2647  04CF  0844               	movf	_year,w
  2648  04D0  00F9               	movwf	DEC_2_BCD@to_convert
  2649  04D1  120A  118A  20DF  120A  118A  	fcall	_DEC_2_BCD
  2650  04D6  087A               	movf	?_DEC_2_BCD+1,w
  2651  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2652  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2653  04D9  00A1               	movwf	I2C_Write@data+1
  2654  04DA  0879               	movf	?_DEC_2_BCD,w
  2655  04DB  00A0               	movwf	I2C_Write@data
  2656  04DC  120A  158A  2737  120A  118A  	fcall	_I2C_Write
  2657                           
  2658                           ;./PIC16F877a_DS3231.h: 29:    I2C_End();
  2659  04E1  120A  158A  272E  120A  118A  	fcall	_I2C_End
  2660  04E6                     l129:
  2661  04E6  0008               	return
  2662  04E7                     __end_of_Set_Time_Date:
  2663                           
  2664                           	psect	text11
  2665  0F37                     __ptext11:	
  2666 ;; *************** function _I2C_Write *****************
  2667 ;; Defined at:
  2668 ;;		line 40 in file "./PIC16F877a_I2C.h"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  data            2    0[BANK0 ] unsigned int 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         0       2       0       0       0
  2683 ;;      Locals:         0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0
  2685 ;;      Totals:         0       2       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 1
  2689 ;; This function calls:
  2690 ;;		_I2C_Hold
  2691 ;; This function is called by:
  2692 ;;		_Set_Time_Date
  2693 ;;		_Update_Current_Date_Time
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _I2C_Write
  2699  0F37                     _I2C_Write:
  2700  0F37                     l1386:	
  2701                           ;incstack = 0
  2702                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2703                           
  2704                           
  2705                           ;./PIC16F877a_I2C.h: 40: void I2C_Write(unsigned data);./PIC16F877a_I2C.h: 41: {;./PIC16
      +                          F877a_I2C.h: 42:   I2C_Hold();
  2706  0F37  120A  158A  274D  120A  158A  	fcall	_I2C_Hold
  2707  0F3C                     l1388:
  2708                           
  2709                           ;./PIC16F877a_I2C.h: 43:   SSPBUF = data;
  2710  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0F3E  0820               	movf	I2C_Write@data,w
  2713  0F3F  0093               	movwf	19	;volatile
  2714  0F40                     l117:
  2715  0F40  0008               	return
  2716  0F41                     __end_of_I2C_Write:
  2717                           
  2718                           	psect	text12
  2719  0F2E                     __ptext12:	
  2720 ;; *************** function _I2C_End *****************
  2721 ;; Defined at:
  2722 ;;		line 34 in file "./PIC16F877a_I2C.h"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0
  2739 ;;      Totals:         0       0       0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 1
  2743 ;; This function calls:
  2744 ;;		_I2C_Hold
  2745 ;; This function is called by:
  2746 ;;		_Set_Time_Date
  2747 ;;		_Update_Current_Date_Time
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _I2C_End
  2753  0F2E                     _I2C_End:
  2754  0F2E                     l1382:	
  2755                           ;incstack = 0
  2756                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  2757                           
  2758                           
  2759                           ;./PIC16F877a_I2C.h: 36:   I2C_Hold();
  2760  0F2E  120A  158A  274D  120A  158A  	fcall	_I2C_Hold
  2761  0F33                     l1384:
  2762                           
  2763                           ;./PIC16F877a_I2C.h: 37:   PEN = 1;
  2764  0F33  1683               	bsf	3,5	;RP0=1, select bank1
  2765  0F34  1303               	bcf	3,6	;RP1=0, select bank1
  2766  0F35  1511               	bsf	17,2	;volatile
  2767  0F36                     l114:
  2768  0F36  0008               	return
  2769  0F37                     __end_of_I2C_End:
  2770                           
  2771                           	psect	text13
  2772  0F25                     __ptext13:	
  2773 ;; *************** function _I2C_Begin *****************
  2774 ;; Defined at:
  2775 ;;		line 26 in file "./PIC16F877a_I2C.h"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, pclath, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0
  2792 ;;      Totals:         0       0       0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 1
  2796 ;; This function calls:
  2797 ;;		_I2C_Hold
  2798 ;; This function is called by:
  2799 ;;		_Set_Time_Date
  2800 ;;		_Update_Current_Date_Time
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _I2C_Begin
  2806  0F25                     _I2C_Begin:
  2807  0F25                     l1378:	
  2808                           ;incstack = 0
  2809                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  2810                           
  2811                           
  2812                           ;./PIC16F877a_I2C.h: 28:   I2C_Hold();
  2813  0F25  120A  158A  274D  120A  158A  	fcall	_I2C_Hold
  2814  0F2A                     l1380:
  2815                           
  2816                           ;./PIC16F877a_I2C.h: 29:   SEN = 1;
  2817  0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0F2C  1411               	bsf	17,0	;volatile
  2820  0F2D                     l111:
  2821  0F2D  0008               	return
  2822  0F2E                     __end_of_I2C_Begin:
  2823                           
  2824                           	psect	text14
  2825  0F4D                     __ptext14:	
  2826 ;; *************** function _I2C_Hold *****************
  2827 ;; Defined at:
  2828 ;;		line 21 in file "./PIC16F877a_I2C.h"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_I2C_Begin
  2852 ;;		_I2C_End
  2853 ;;		_I2C_Write
  2854 ;;		_I2C_Read
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _I2C_Hold
  2860  0F4D                     _I2C_Hold:
  2861  0F4D                     l1246:	
  2862                           ;incstack = 0
  2863                           ; Regs used in _I2C_Hold: [wreg+status,2]
  2864                           
  2865  0F4D                     l1248:	
  2866                           ;./PIC16F877a_I2C.h: 23:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) ) 
      +                          ;
  2867                           
  2868  0F4D  1683               	bsf	3,5	;RP0=1, select bank1
  2869  0F4E  1303               	bcf	3,6	;RP1=0, select bank1
  2870  0F4F  0811               	movf	17,w	;volatile
  2871  0F50  391F               	andlw	31
  2872  0F51  1D03               	btfss	3,2
  2873  0F52  2F54               	goto	u601
  2874  0F53  2F55               	goto	u600
  2875  0F54                     u601:
  2876  0F54  2F4D               	goto	l1248
  2877  0F55                     u600:
  2878  0F55                     l1250:
  2879  0F55  1914               	btfsc	20,2	;volatile
  2880  0F56  2F58               	goto	u611
  2881  0F57  2F59               	goto	u610
  2882  0F58                     u611:
  2883  0F58  2F4D               	goto	l1248
  2884  0F59                     u610:
  2885  0F59                     l108:
  2886  0F59  0008               	return
  2887  0F5A                     __end_of_I2C_Hold:
  2888                           
  2889                           	psect	text15
  2890  00DF                     __ptext15:	
  2891 ;; *************** function _DEC_2_BCD *****************
  2892 ;; Defined at:
  2893 ;;		line 12 in file "./PIC16F877a_DS3231.h"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  to_convert      2    9[COMMON] int 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2    9[COMMON] int 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         2       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0
  2909 ;;      Temps:          2       0       0       0       0
  2910 ;;      Totals:         4       0       0       0       0
  2911 ;;Total ram usage:        4 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 1
  2914 ;; This function calls:
  2915 ;;		___awdiv
  2916 ;;		___awmod
  2917 ;; This function is called by:
  2918 ;;		_Set_Time_Date
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _DEC_2_BCD
  2924  00DF                     _DEC_2_BCD:
  2925  00DF                     l1410:	
  2926                           ;incstack = 0
  2927                           ; Regs used in _DEC_2_BCD: [wreg+status,2+status,0+pclath+cstack]
  2928                           
  2929                           
  2930                           ;./PIC16F877a_DS3231.h: 12: int DEC_2_BCD (int to_convert);./PIC16F877a_DS3231.h: 13: {;
      +                          ./PIC16F877a_DS3231.h: 14:    return ((to_convert / 10) << 4) + (to_convert % 10);
  2931  00DF  300A               	movlw	10
  2932  00E0  00F0               	movwf	___awdiv@divisor
  2933  00E1  3000               	movlw	0
  2934  00E2  00F1               	movwf	___awdiv@divisor+1
  2935  00E3  087A               	movf	DEC_2_BCD@to_convert+1,w
  2936  00E4  00F3               	movwf	___awdiv@dividend+1
  2937  00E5  0879               	movf	DEC_2_BCD@to_convert,w
  2938  00E6  00F2               	movwf	___awdiv@dividend
  2939  00E7  120A  118A  2369  120A  118A  	fcall	___awdiv
  2940  00EC  0870               	movf	?___awdiv,w
  2941  00ED  00FB               	movwf	??_DEC_2_BCD
  2942  00EE  0871               	movf	?___awdiv+1,w
  2943  00EF  00FC               	movwf	??_DEC_2_BCD+1
  2944  00F0  0EFB               	swapf	??_DEC_2_BCD,f
  2945  00F1  0EFC               	swapf	??_DEC_2_BCD+1,f
  2946  00F2  30F0               	movlw	240
  2947  00F3  05FC               	andwf	??_DEC_2_BCD+1,f
  2948  00F4  087B               	movf	??_DEC_2_BCD,w
  2949  00F5  390F               	andlw	15
  2950  00F6  04FC               	iorwf	??_DEC_2_BCD+1,f
  2951  00F7  30F0               	movlw	240
  2952  00F8  05FB               	andwf	??_DEC_2_BCD,f
  2953  00F9  300A               	movlw	10
  2954  00FA  00F0               	movwf	___awmod@divisor
  2955  00FB  3000               	movlw	0
  2956  00FC  00F1               	movwf	___awmod@divisor+1
  2957  00FD  087A               	movf	DEC_2_BCD@to_convert+1,w
  2958  00FE  00F3               	movwf	___awmod@dividend+1
  2959  00FF  0879               	movf	DEC_2_BCD@to_convert,w
  2960  0100  00F2               	movwf	___awmod@dividend
  2961  0101  120A  118A  224F  120A  118A  	fcall	___awmod
  2962  0106  0870               	movf	?___awmod,w
  2963  0107  077B               	addwf	??_DEC_2_BCD,w
  2964  0108  00F9               	movwf	?_DEC_2_BCD
  2965  0109  0871               	movf	?___awmod+1,w
  2966  010A  1803               	skipnc
  2967  010B  0A71               	incf	?___awmod+1,w
  2968  010C  077C               	addwf	??_DEC_2_BCD+1,w
  2969  010D  00FA               	movwf	?_DEC_2_BCD+1
  2970  010E                     l126:
  2971  010E  0008               	return
  2972  010F                     __end_of_DEC_2_BCD:
  2973                           
  2974                           	psect	text16
  2975  024F                     __ptext16:	
  2976 ;; *************** function ___awmod *****************
  2977 ;; Defined at:
  2978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  divisor         2    0[COMMON] int 
  2981 ;;  dividend        2    2[COMMON] int 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  sign            1    6[COMMON] unsigned char 
  2984 ;;  counter         1    5[COMMON] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  2    0[COMMON] int 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         4       0       0       0       0
  2995 ;;      Locals:         2       0       0       0       0
  2996 ;;      Temps:          1       0       0       0       0
  2997 ;;      Totals:         7       0       0       0       0
  2998 ;;Total ram usage:        7 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_DEC_2_BCD
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function ___awmod
  3010  024F                     ___awmod:
  3011  024F                     l1310:	
  3012                           ;incstack = 0
  3013                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3014                           
  3015  024F  01F6               	clrf	___awmod@sign
  3016  0250                     l1312:
  3017  0250  1FF3               	btfss	___awmod@dividend+1,7
  3018  0251  2A53               	goto	u761
  3019  0252  2A54               	goto	u760
  3020  0253                     u761:
  3021  0253  2A5B               	goto	l1318
  3022  0254                     u760:
  3023  0254                     l1314:
  3024  0254  09F2               	comf	___awmod@dividend,f
  3025  0255  09F3               	comf	___awmod@dividend+1,f
  3026  0256  0AF2               	incf	___awmod@dividend,f
  3027  0257  1903               	skipnz
  3028  0258  0AF3               	incf	___awmod@dividend+1,f
  3029  0259                     l1316:
  3030  0259  01F6               	clrf	___awmod@sign
  3031  025A  0AF6               	incf	___awmod@sign,f
  3032  025B                     l1318:
  3033  025B  1FF1               	btfss	___awmod@divisor+1,7
  3034  025C  2A5E               	goto	u771
  3035  025D  2A5F               	goto	u770
  3036  025E                     u771:
  3037  025E  2A64               	goto	l1322
  3038  025F                     u770:
  3039  025F                     l1320:
  3040  025F  09F0               	comf	___awmod@divisor,f
  3041  0260  09F1               	comf	___awmod@divisor+1,f
  3042  0261  0AF0               	incf	___awmod@divisor,f
  3043  0262  1903               	skipnz
  3044  0263  0AF1               	incf	___awmod@divisor+1,f
  3045  0264                     l1322:
  3046  0264  0870               	movf	___awmod@divisor,w
  3047  0265  0471               	iorwf	___awmod@divisor+1,w
  3048  0266  1903               	btfsc	3,2
  3049  0267  2A69               	goto	u781
  3050  0268  2A6A               	goto	u780
  3051  0269                     u781:
  3052  0269  2A99               	goto	l1340
  3053  026A                     u780:
  3054  026A                     l1324:
  3055  026A  01F5               	clrf	___awmod@counter
  3056  026B  0AF5               	incf	___awmod@counter,f
  3057  026C  2A78               	goto	l1330
  3058  026D                     l1326:
  3059  026D  3001               	movlw	1
  3060  026E                     u795:
  3061  026E  1003               	clrc
  3062  026F  0DF0               	rlf	___awmod@divisor,f
  3063  0270  0DF1               	rlf	___awmod@divisor+1,f
  3064  0271  3EFF               	addlw	-1
  3065  0272  1D03               	skipz
  3066  0273  2A6E               	goto	u795
  3067  0274                     l1328:
  3068  0274  3001               	movlw	1
  3069  0275  00F4               	movwf	??___awmod
  3070  0276  0874               	movf	??___awmod,w
  3071  0277  07F5               	addwf	___awmod@counter,f
  3072  0278                     l1330:
  3073  0278  1FF1               	btfss	___awmod@divisor+1,7
  3074  0279  2A7B               	goto	u801
  3075  027A  2A7C               	goto	u800
  3076  027B                     u801:
  3077  027B  2A6D               	goto	l1326
  3078  027C                     u800:
  3079  027C                     l1332:
  3080  027C  0871               	movf	___awmod@divisor+1,w
  3081  027D  0273               	subwf	___awmod@dividend+1,w
  3082  027E  1D03               	skipz
  3083  027F  2A82               	goto	u815
  3084  0280  0870               	movf	___awmod@divisor,w
  3085  0281  0272               	subwf	___awmod@dividend,w
  3086  0282                     u815:
  3087  0282  1C03               	skipc
  3088  0283  2A85               	goto	u811
  3089  0284  2A86               	goto	u810
  3090  0285                     u811:
  3091  0285  2A8C               	goto	l1336
  3092  0286                     u810:
  3093  0286                     l1334:
  3094  0286  0870               	movf	___awmod@divisor,w
  3095  0287  02F2               	subwf	___awmod@dividend,f
  3096  0288  0871               	movf	___awmod@divisor+1,w
  3097  0289  1C03               	skipc
  3098  028A  03F3               	decf	___awmod@dividend+1,f
  3099  028B  02F3               	subwf	___awmod@dividend+1,f
  3100  028C                     l1336:
  3101  028C  3001               	movlw	1
  3102  028D                     u825:
  3103  028D  1003               	clrc
  3104  028E  0CF1               	rrf	___awmod@divisor+1,f
  3105  028F  0CF0               	rrf	___awmod@divisor,f
  3106  0290  3EFF               	addlw	-1
  3107  0291  1D03               	skipz
  3108  0292  2A8D               	goto	u825
  3109  0293                     l1338:
  3110  0293  3001               	movlw	1
  3111  0294  02F5               	subwf	___awmod@counter,f
  3112  0295  1D03               	btfss	3,2
  3113  0296  2A98               	goto	u831
  3114  0297  2A99               	goto	u830
  3115  0298                     u831:
  3116  0298  2A7C               	goto	l1332
  3117  0299                     u830:
  3118  0299                     l1340:
  3119  0299  0876               	movf	___awmod@sign,w
  3120  029A  1903               	btfsc	3,2
  3121  029B  2A9D               	goto	u841
  3122  029C  2A9E               	goto	u840
  3123  029D                     u841:
  3124  029D  2AA3               	goto	l1344
  3125  029E                     u840:
  3126  029E                     l1342:
  3127  029E  09F2               	comf	___awmod@dividend,f
  3128  029F  09F3               	comf	___awmod@dividend+1,f
  3129  02A0  0AF2               	incf	___awmod@dividend,f
  3130  02A1  1903               	skipnz
  3131  02A2  0AF3               	incf	___awmod@dividend+1,f
  3132  02A3                     l1344:
  3133  02A3  0873               	movf	___awmod@dividend+1,w
  3134  02A4  00F1               	movwf	?___awmod+1
  3135  02A5  0872               	movf	___awmod@dividend,w
  3136  02A6  00F0               	movwf	?___awmod
  3137  02A7                     l404:
  3138  02A7  0008               	return
  3139  02A8                     __end_of___awmod:
  3140                           
  3141                           	psect	text17
  3142  0369                     __ptext17:	
  3143 ;; *************** function ___awdiv *****************
  3144 ;; Defined at:
  3145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  divisor         2    0[COMMON] int 
  3148 ;;  dividend        2    2[COMMON] int 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  quotient        2    7[COMMON] int 
  3151 ;;  sign            1    6[COMMON] unsigned char 
  3152 ;;  counter         1    5[COMMON] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  2    0[COMMON] int 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         4       0       0       0       0
  3163 ;;      Locals:         4       0       0       0       0
  3164 ;;      Temps:          1       0       0       0       0
  3165 ;;      Totals:         9       0       0       0       0
  3166 ;;Total ram usage:        9 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_DEC_2_BCD
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           
  3177                           ;psect for function ___awdiv
  3178  0369                     ___awdiv:
  3179  0369                     l1266:	
  3180                           ;incstack = 0
  3181                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3182                           
  3183  0369  01F6               	clrf	___awdiv@sign
  3184  036A                     l1268:
  3185  036A  1FF1               	btfss	___awdiv@divisor+1,7
  3186  036B  2B6D               	goto	u661
  3187  036C  2B6E               	goto	u660
  3188  036D                     u661:
  3189  036D  2B75               	goto	l1274
  3190  036E                     u660:
  3191  036E                     l1270:
  3192  036E  09F0               	comf	___awdiv@divisor,f
  3193  036F  09F1               	comf	___awdiv@divisor+1,f
  3194  0370  0AF0               	incf	___awdiv@divisor,f
  3195  0371  1903               	skipnz
  3196  0372  0AF1               	incf	___awdiv@divisor+1,f
  3197  0373                     l1272:
  3198  0373  01F6               	clrf	___awdiv@sign
  3199  0374  0AF6               	incf	___awdiv@sign,f
  3200  0375                     l1274:
  3201  0375  1FF3               	btfss	___awdiv@dividend+1,7
  3202  0376  2B78               	goto	u671
  3203  0377  2B79               	goto	u670
  3204  0378                     u671:
  3205  0378  2B82               	goto	l1280
  3206  0379                     u670:
  3207  0379                     l1276:
  3208  0379  09F2               	comf	___awdiv@dividend,f
  3209  037A  09F3               	comf	___awdiv@dividend+1,f
  3210  037B  0AF2               	incf	___awdiv@dividend,f
  3211  037C  1903               	skipnz
  3212  037D  0AF3               	incf	___awdiv@dividend+1,f
  3213  037E                     l1278:
  3214  037E  3001               	movlw	1
  3215  037F  00F4               	movwf	??___awdiv
  3216  0380  0874               	movf	??___awdiv,w
  3217  0381  06F6               	xorwf	___awdiv@sign,f
  3218  0382                     l1280:
  3219  0382  01F7               	clrf	___awdiv@quotient
  3220  0383  01F8               	clrf	___awdiv@quotient+1
  3221  0384                     l1282:
  3222  0384  0870               	movf	___awdiv@divisor,w
  3223  0385  0471               	iorwf	___awdiv@divisor+1,w
  3224  0386  1903               	btfsc	3,2
  3225  0387  2B89               	goto	u681
  3226  0388  2B8A               	goto	u680
  3227  0389                     u681:
  3228  0389  2BC1               	goto	l1302
  3229  038A                     u680:
  3230  038A                     l1284:
  3231  038A  01F5               	clrf	___awdiv@counter
  3232  038B  0AF5               	incf	___awdiv@counter,f
  3233  038C  2B98               	goto	l1290
  3234  038D                     l1286:
  3235  038D  3001               	movlw	1
  3236  038E                     u695:
  3237  038E  1003               	clrc
  3238  038F  0DF0               	rlf	___awdiv@divisor,f
  3239  0390  0DF1               	rlf	___awdiv@divisor+1,f
  3240  0391  3EFF               	addlw	-1
  3241  0392  1D03               	skipz
  3242  0393  2B8E               	goto	u695
  3243  0394                     l1288:
  3244  0394  3001               	movlw	1
  3245  0395  00F4               	movwf	??___awdiv
  3246  0396  0874               	movf	??___awdiv,w
  3247  0397  07F5               	addwf	___awdiv@counter,f
  3248  0398                     l1290:
  3249  0398  1FF1               	btfss	___awdiv@divisor+1,7
  3250  0399  2B9B               	goto	u701
  3251  039A  2B9C               	goto	u700
  3252  039B                     u701:
  3253  039B  2B8D               	goto	l1286
  3254  039C                     u700:
  3255  039C                     l1292:
  3256  039C  3001               	movlw	1
  3257  039D                     u715:
  3258  039D  1003               	clrc
  3259  039E  0DF7               	rlf	___awdiv@quotient,f
  3260  039F  0DF8               	rlf	___awdiv@quotient+1,f
  3261  03A0  3EFF               	addlw	-1
  3262  03A1  1D03               	skipz
  3263  03A2  2B9D               	goto	u715
  3264  03A3  0871               	movf	___awdiv@divisor+1,w
  3265  03A4  0273               	subwf	___awdiv@dividend+1,w
  3266  03A5  1D03               	skipz
  3267  03A6  2BA9               	goto	u725
  3268  03A7  0870               	movf	___awdiv@divisor,w
  3269  03A8  0272               	subwf	___awdiv@dividend,w
  3270  03A9                     u725:
  3271  03A9  1C03               	skipc
  3272  03AA  2BAC               	goto	u721
  3273  03AB  2BAD               	goto	u720
  3274  03AC                     u721:
  3275  03AC  2BB4               	goto	l1298
  3276  03AD                     u720:
  3277  03AD                     l1294:
  3278  03AD  0870               	movf	___awdiv@divisor,w
  3279  03AE  02F2               	subwf	___awdiv@dividend,f
  3280  03AF  0871               	movf	___awdiv@divisor+1,w
  3281  03B0  1C03               	skipc
  3282  03B1  03F3               	decf	___awdiv@dividend+1,f
  3283  03B2  02F3               	subwf	___awdiv@dividend+1,f
  3284  03B3                     l1296:
  3285  03B3  1477               	bsf	___awdiv@quotient,0
  3286  03B4                     l1298:
  3287  03B4  3001               	movlw	1
  3288  03B5                     u735:
  3289  03B5  1003               	clrc
  3290  03B6  0CF1               	rrf	___awdiv@divisor+1,f
  3291  03B7  0CF0               	rrf	___awdiv@divisor,f
  3292  03B8  3EFF               	addlw	-1
  3293  03B9  1D03               	skipz
  3294  03BA  2BB5               	goto	u735
  3295  03BB                     l1300:
  3296  03BB  3001               	movlw	1
  3297  03BC  02F5               	subwf	___awdiv@counter,f
  3298  03BD  1D03               	btfss	3,2
  3299  03BE  2BC0               	goto	u741
  3300  03BF  2BC1               	goto	u740
  3301  03C0                     u741:
  3302  03C0  2B9C               	goto	l1292
  3303  03C1                     u740:
  3304  03C1                     l1302:
  3305  03C1  0876               	movf	___awdiv@sign,w
  3306  03C2  1903               	btfsc	3,2
  3307  03C3  2BC5               	goto	u751
  3308  03C4  2BC6               	goto	u750
  3309  03C5                     u751:
  3310  03C5  2BCB               	goto	l1306
  3311  03C6                     u750:
  3312  03C6                     l1304:
  3313  03C6  09F7               	comf	___awdiv@quotient,f
  3314  03C7  09F8               	comf	___awdiv@quotient+1,f
  3315  03C8  0AF7               	incf	___awdiv@quotient,f
  3316  03C9  1903               	skipnz
  3317  03CA  0AF8               	incf	___awdiv@quotient+1,f
  3318  03CB                     l1306:
  3319  03CB  0878               	movf	___awdiv@quotient+1,w
  3320  03CC  00F1               	movwf	?___awdiv+1
  3321  03CD  0877               	movf	___awdiv@quotient,w
  3322  03CE  00F0               	movwf	?___awdiv
  3323  03CF                     l391:
  3324  03CF  0008               	return
  3325  03D0                     __end_of___awdiv:
  3326                           
  3327                           	psect	text18
  3328  01FA                     __ptext18:	
  3329 ;; *************** function _Lcd_Start *****************
  3330 ;; Defined at:
  3331 ;;		line 75 in file "./lcd.h"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  i               2    0        int 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, pclath, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0
  3347 ;;      Temps:          2       0       0       0       0
  3348 ;;      Totals:         2       0       0       0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 2
  3352 ;; This function calls:
  3353 ;;		_Lcd_Cmd
  3354 ;;		_Lcd_SetBit
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _Lcd_Start
  3362  01FA                     _Lcd_Start:
  3363  01FA                     l1452:	
  3364                           ;incstack = 0
  3365                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  3366                           
  3367                           
  3368                           ;./lcd.h: 77:   Lcd_SetBit(0x00);
  3369  01FA  3000               	movlw	0
  3370  01FB  120A  158A  2794  120A  118A  	fcall	_Lcd_SetBit
  3371  0200                     l1454:
  3372  0200                     l1456:
  3373  0200                     l1464:
  3374                           
  3375                           ;./lcd.h: 79:   Lcd_Cmd(0x03);
  3376  0200  3003               	movlw	3
  3377  0201  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3378  0206                     l1466:
  3379                           
  3380                           ;./lcd.h: 80:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3381  0206  3021               	movlw	33
  3382  0207  00F5               	movwf	??_Lcd_Start+1
  3383  0208  3076               	movlw	118
  3384  0209  00F4               	movwf	??_Lcd_Start
  3385  020A                     u1087:
  3386  020A  0BF4               	decfsz	??_Lcd_Start,f
  3387  020B  2A0A               	goto	u1087
  3388  020C  0BF5               	decfsz	??_Lcd_Start+1,f
  3389  020D  2A0A               	goto	u1087
  3390  020E  0000               	nop
  3391  020F                     l1468:
  3392                           
  3393                           ;./lcd.h: 81:   Lcd_Cmd(0x03);
  3394  020F  3003               	movlw	3
  3395  0210  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3396                           
  3397                           ;./lcd.h: 82:     _delay((unsigned long)((11)*(20000000/4000.0)));
  3398  0215  3048               	movlw	72
  3399  0216  00F5               	movwf	??_Lcd_Start+1
  3400  0217  306C               	movlw	108
  3401  0218  00F4               	movwf	??_Lcd_Start
  3402  0219                     u1097:
  3403  0219  0BF4               	decfsz	??_Lcd_Start,f
  3404  021A  2A19               	goto	u1097
  3405  021B  0BF5               	decfsz	??_Lcd_Start+1,f
  3406  021C  2A19               	goto	u1097
  3407  021D  0000               	nop
  3408  021E                     l1470:
  3409                           
  3410                           ;./lcd.h: 83:   Lcd_Cmd(0x03);
  3411  021E  3003               	movlw	3
  3412  021F  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3413  0224                     l1472:
  3414                           
  3415                           ;./lcd.h: 84:   Lcd_Cmd(0x02);
  3416  0224  3002               	movlw	2
  3417  0225  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3418  022A                     l1474:
  3419                           
  3420                           ;./lcd.h: 85:   Lcd_Cmd(0x02);
  3421  022A  3002               	movlw	2
  3422  022B  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3423  0230                     l1476:
  3424                           
  3425                           ;./lcd.h: 86:   Lcd_Cmd(0x08);
  3426  0230  3008               	movlw	8
  3427  0231  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3428  0236                     l1478:
  3429                           
  3430                           ;./lcd.h: 87:   Lcd_Cmd(0x00);
  3431  0236  3000               	movlw	0
  3432  0237  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3433  023C                     l1480:
  3434                           
  3435                           ;./lcd.h: 88:   Lcd_Cmd(0x0C);
  3436  023C  300C               	movlw	12
  3437  023D  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3438  0242                     l1482:
  3439                           
  3440                           ;./lcd.h: 89:   Lcd_Cmd(0x00);
  3441  0242  3000               	movlw	0
  3442  0243  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3443  0248                     l1484:
  3444                           
  3445                           ;./lcd.h: 90:   Lcd_Cmd(0x06);
  3446  0248  3006               	movlw	6
  3447  0249  120A  158A  277A  120A  118A  	fcall	_Lcd_Cmd
  3448  024E                     l86:
  3449  024E  0008               	return
  3450  024F                     __end_of_Lcd_Start:
  3451                           
  3452                           	psect	text19
  3453  0F7A                     __ptext19:	
  3454 ;; *************** function _Lcd_Cmd *****************
  3455 ;; Defined at:
  3456 ;;		line 39 in file "./lcd.h"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  a               1    wreg     unsigned char 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  a               1    3[COMMON] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, pclath, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         0       0       0       0       0
  3471 ;;      Locals:         1       0       0       0       0
  3472 ;;      Temps:          2       0       0       0       0
  3473 ;;      Totals:         3       0       0       0       0
  3474 ;;Total ram usage:        3 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 1
  3477 ;; This function calls:
  3478 ;;		_Lcd_SetBit
  3479 ;; This function is called by:
  3480 ;;		_Lcd_Clear
  3481 ;;		_Lcd_Set_Cursor
  3482 ;;		_Lcd_Start
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function _Lcd_Cmd
  3488  0F7A                     _Lcd_Cmd:
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3492                           ;Lcd_Cmd@a stored from wreg
  3493  0F7A  00F3               	movwf	Lcd_Cmd@a
  3494  0F7B                     l1204:
  3495                           
  3496                           ;./lcd.h: 39: void Lcd_Cmd(char a);./lcd.h: 40: {;./lcd.h: 41:     RD2 = 0;
  3497  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  3499  0F7D  1108               	bcf	8,2	;volatile
  3500  0F7E                     l1206:
  3501                           
  3502                           ;./lcd.h: 42:     Lcd_SetBit(a);
  3503  0F7E  0873               	movf	Lcd_Cmd@a,w
  3504  0F7F  120A  158A  2794  120A  158A  	fcall	_Lcd_SetBit
  3505  0F84                     l1208:
  3506                           
  3507                           ;./lcd.h: 43:     RD3 = 1;
  3508  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0F86  1588               	bsf	8,3	;volatile
  3511  0F87                     l1210:
  3512                           
  3513                           ;./lcd.h: 44:         _delay((unsigned long)((4)*(20000000/4000.0)));
  3514  0F87  301A               	movlw	26
  3515  0F88  00F2               	movwf	??_Lcd_Cmd+1
  3516  0F89  30F8               	movlw	248
  3517  0F8A  00F1               	movwf	??_Lcd_Cmd
  3518  0F8B                     u1107:
  3519  0F8B  0BF1               	decfsz	??_Lcd_Cmd,f
  3520  0F8C  2F8B               	goto	u1107
  3521  0F8D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3522  0F8E  2F8B               	goto	u1107
  3523  0F8F  0000               	nop
  3524  0F90                     l1212:
  3525                           
  3526                           ;./lcd.h: 45:         RD3 = 0;
  3527  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0F92  1188               	bcf	8,3	;volatile
  3530  0F93                     l72:
  3531  0F93  0008               	return
  3532  0F94                     __end_of_Lcd_Cmd:
  3533                           
  3534                           	psect	text20
  3535  0F94                     __ptext20:	
  3536 ;; *************** function _Lcd_SetBit *****************
  3537 ;; Defined at:
  3538 ;;		line 16 in file "./lcd.h"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  data_bit        1    wreg     unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  data_bit        1    0[COMMON] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       0       0       0       0
  3553 ;;      Locals:         1       0       0       0       0
  3554 ;;      Temps:          0       0       0       0       0
  3555 ;;      Totals:         1       0       0       0       0
  3556 ;;Total ram usage:        1 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_Lcd_Cmd
  3562 ;;		_Lcd_Start
  3563 ;;		_Lcd_Print_Char
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _Lcd_SetBit
  3569  0F94                     _Lcd_SetBit:
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _Lcd_SetBit: [wreg]
  3573                           ;Lcd_SetBit@data_bit stored from wreg
  3574  0F94  00F0               	movwf	Lcd_SetBit@data_bit
  3575  0F95                     l1194:
  3576                           
  3577                           ;./lcd.h: 16: void Lcd_SetBit(char data_bit);./lcd.h: 17: {;./lcd.h: 18:     if(data_bit
      +                          & 1)
  3578  0F95  1C70               	btfss	Lcd_SetBit@data_bit,0
  3579  0F96  2F98               	goto	u531
  3580  0F97  2F99               	goto	u530
  3581  0F98                     u531:
  3582  0F98  2F9D               	goto	l61
  3583  0F99                     u530:
  3584  0F99                     l1196:
  3585                           
  3586                           ;./lcd.h: 19:         RD4 = 1;
  3587  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0F9B  1608               	bsf	8,4	;volatile
  3590  0F9C  2FA0               	goto	l62
  3591  0F9D                     l61:	
  3592                           ;./lcd.h: 20:     else
  3593                           
  3594                           
  3595                           ;./lcd.h: 21:         RD4 = 0;
  3596  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0F9F  1208               	bcf	8,4	;volatile
  3599  0FA0                     l62:
  3600                           
  3601                           ;./lcd.h: 23:     if(data_bit& 2)
  3602  0FA0  1CF0               	btfss	Lcd_SetBit@data_bit,1
  3603  0FA1  2FA3               	goto	u541
  3604  0FA2  2FA4               	goto	u540
  3605  0FA3                     u541:
  3606  0FA3  2FA6               	goto	l63
  3607  0FA4                     u540:
  3608  0FA4                     l1198:
  3609                           
  3610                           ;./lcd.h: 24:         RD5 = 1;
  3611  0FA4  1688               	bsf	8,5	;volatile
  3612  0FA5  2FA7               	goto	l64
  3613  0FA6                     l63:	
  3614                           ;./lcd.h: 25:     else
  3615                           
  3616                           
  3617                           ;./lcd.h: 26:         RD5 = 0;
  3618  0FA6  1288               	bcf	8,5	;volatile
  3619  0FA7                     l64:
  3620                           
  3621                           ;./lcd.h: 28:     if(data_bit& 4)
  3622  0FA7  1D70               	btfss	Lcd_SetBit@data_bit,2
  3623  0FA8  2FAA               	goto	u551
  3624  0FA9  2FAB               	goto	u550
  3625  0FAA                     u551:
  3626  0FAA  2FAD               	goto	l65
  3627  0FAB                     u550:
  3628  0FAB                     l1200:
  3629                           
  3630                           ;./lcd.h: 29:         RD6 = 1;
  3631  0FAB  1708               	bsf	8,6	;volatile
  3632  0FAC  2FAE               	goto	l66
  3633  0FAD                     l65:	
  3634                           ;./lcd.h: 30:     else
  3635                           
  3636                           
  3637                           ;./lcd.h: 31:         RD6 = 0;
  3638  0FAD  1308               	bcf	8,6	;volatile
  3639  0FAE                     l66:
  3640                           
  3641                           ;./lcd.h: 33:     if(data_bit& 8)
  3642  0FAE  1DF0               	btfss	Lcd_SetBit@data_bit,3
  3643  0FAF  2FB1               	goto	u561
  3644  0FB0  2FB2               	goto	u560
  3645  0FB1                     u561:
  3646  0FB1  2FB4               	goto	l67
  3647  0FB2                     u560:
  3648  0FB2                     l1202:
  3649                           
  3650                           ;./lcd.h: 34:         RD7 = 1;
  3651  0FB2  1788               	bsf	8,7	;volatile
  3652  0FB3  2FB5               	goto	l69
  3653  0FB4                     l67:	
  3654                           ;./lcd.h: 35:     else
  3655                           
  3656                           
  3657                           ;./lcd.h: 36:         RD7 = 0;
  3658  0FB4  1388               	bcf	8,7	;volatile
  3659  0FB5                     l69:
  3660  0FB5  0008               	return
  3661  0FB6                     __end_of_Lcd_SetBit:
  3662                           
  3663                           	psect	text21
  3664  01A7                     __ptext21:	
  3665 ;; *************** function _I2C_Initialize *****************
  3666 ;; Defined at:
  3667 ;;		line 10 in file "./PIC16F877a_I2C.h"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  feq_K           4   13[BANK0 ] const unsigned long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       4       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       4       0       0       0
  3684 ;;      Totals:         0       8       0       0       0
  3685 ;;Total ram usage:        8 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 1
  3688 ;; This function calls:
  3689 ;;		___lldiv
  3690 ;;		___lmul
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function _I2C_Initialize
  3698  01A7                     _I2C_Initialize:
  3699  01A7                     l1486:	
  3700                           ;incstack = 0
  3701                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3702                           
  3703                           
  3704                           ;./PIC16F877a_I2C.h: 10: void I2C_Initialize(const unsigned long feq_K);./PIC16F877a_I2C
      +                          .h: 11: {;./PIC16F877a_I2C.h: 12:   TRISC3 = 1; TRISC4 = 1;
  3705  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  3706  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  3707  01A9  1587               	bsf	7,3	;volatile
  3708  01AA  1607               	bsf	7,4	;volatile
  3709  01AB                     l1488:
  3710                           
  3711                           ;./PIC16F877a_I2C.h: 14:   SSPCON = 0b00101000;
  3712  01AB  3028               	movlw	40
  3713  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3714  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  3715  01AE  0094               	movwf	20	;volatile
  3716  01AF                     l1490:
  3717                           
  3718                           ;./PIC16F877a_I2C.h: 15:   SSPCON2 = 0b00000000;
  3719  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  3720  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  3721  01B1  0191               	clrf	17	;volatile
  3722  01B2                     l1492:
  3723                           
  3724                           ;./PIC16F877a_I2C.h: 17:   SSPADD = (20000000/(4*feq_K*100))-1;
  3725  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  3726  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  3727  01B4  082D               	movf	I2C_Initialize@feq_K,w
  3728  01B5  00B1               	movwf	??_I2C_Initialize
  3729  01B6  082E               	movf	I2C_Initialize@feq_K+1,w
  3730  01B7  00B2               	movwf	??_I2C_Initialize+1
  3731  01B8  082F               	movf	I2C_Initialize@feq_K+2,w
  3732  01B9  00B3               	movwf	??_I2C_Initialize+2
  3733  01BA  0830               	movf	I2C_Initialize@feq_K+3,w
  3734  01BB  00B4               	movwf	??_I2C_Initialize+3
  3735  01BC  3002               	movlw	2
  3736  01BD                     u1045:
  3737  01BD  1003               	clrc
  3738  01BE  0DB1               	rlf	??_I2C_Initialize,f
  3739  01BF  0DB2               	rlf	??_I2C_Initialize+1,f
  3740  01C0  0DB3               	rlf	??_I2C_Initialize+2,f
  3741  01C1  0DB4               	rlf	??_I2C_Initialize+3,f
  3742  01C2                     u1040:
  3743  01C2  3EFF               	addlw	-1
  3744  01C3  1D03               	skipz
  3745  01C4  29BD               	goto	u1045
  3746  01C5  0834               	movf	??_I2C_Initialize+3,w
  3747  01C6  00F3               	movwf	___lmul@multiplier+3
  3748  01C7  0833               	movf	??_I2C_Initialize+2,w
  3749  01C8  00F2               	movwf	___lmul@multiplier+2
  3750  01C9  0832               	movf	??_I2C_Initialize+1,w
  3751  01CA  00F1               	movwf	___lmul@multiplier+1
  3752  01CB  0831               	movf	??_I2C_Initialize,w
  3753  01CC  00F0               	movwf	___lmul@multiplier
  3754  01CD  3000               	movlw	0
  3755  01CE  00F7               	movwf	___lmul@multiplicand+3
  3756  01CF  3000               	movlw	0
  3757  01D0  00F6               	movwf	___lmul@multiplicand+2
  3758  01D1  3000               	movlw	0
  3759  01D2  00F5               	movwf	___lmul@multiplicand+1
  3760  01D3  3064               	movlw	100
  3761  01D4  00F4               	movwf	___lmul@multiplicand
  3762  01D5  120A  118A  210F  120A  118A  	fcall	___lmul
  3763  01DA  0873               	movf	?___lmul+3,w
  3764  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3765  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  3766  01DD  00A3               	movwf	___lldiv@divisor+3
  3767  01DE  0872               	movf	?___lmul+2,w
  3768  01DF  00A2               	movwf	___lldiv@divisor+2
  3769  01E0  0871               	movf	?___lmul+1,w
  3770  01E1  00A1               	movwf	___lldiv@divisor+1
  3771  01E2  0870               	movf	?___lmul,w
  3772  01E3  00A0               	movwf	___lldiv@divisor
  3773  01E4  3001               	movlw	1
  3774  01E5  00A7               	movwf	___lldiv@dividend+3
  3775  01E6  3031               	movlw	49
  3776  01E7  00A6               	movwf	___lldiv@dividend+2
  3777  01E8  302D               	movlw	45
  3778  01E9  00A5               	movwf	___lldiv@dividend+1
  3779  01EA  3000               	movlw	0
  3780  01EB  00A4               	movwf	___lldiv@dividend
  3781  01EC  120A  118A  23D0  120A  118A  	fcall	___lldiv
  3782  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3783  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3784  01F3  0820               	movf	?___lldiv,w
  3785  01F4  3EFF               	addlw	255
  3786  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  3787  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  3788  01F7  0093               	movwf	19	;volatile
  3789  01F8                     l1494:
  3790                           
  3791                           ;./PIC16F877a_I2C.h: 18:   SSPSTAT = 0b00000000;
  3792  01F8  0194               	clrf	20	;volatile
  3793  01F9                     l102:
  3794  01F9  0008               	return
  3795  01FA                     __end_of_I2C_Initialize:
  3796                           
  3797                           	psect	text22
  3798  010F                     __ptext22:	
  3799 ;; *************** function ___lmul *****************
  3800 ;; Defined at:
  3801 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  multiplier      4    0[COMMON] unsigned long 
  3804 ;;  multiplicand    4    4[COMMON] unsigned long 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  product         4    9[COMMON] unsigned long 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  4    0[COMMON] unsigned long 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         8       0       0       0       0
  3817 ;;      Locals:         4       0       0       0       0
  3818 ;;      Temps:          1       0       0       0       0
  3819 ;;      Totals:        13       0       0       0       0
  3820 ;;Total ram usage:       13 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_I2C_Initialize
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           
  3830                           ;psect for function ___lmul
  3831  010F                     ___lmul:
  3832  010F                     l1414:	
  3833                           ;incstack = 0
  3834                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3835                           
  3836  010F  3000               	movlw	0
  3837  0110  00FC               	movwf	___lmul@product+3
  3838  0111  3000               	movlw	0
  3839  0112  00FB               	movwf	___lmul@product+2
  3840  0113  3000               	movlw	0
  3841  0114  00FA               	movwf	___lmul@product+1
  3842  0115  3000               	movlw	0
  3843  0116  00F9               	movwf	___lmul@product
  3844  0117                     l1416:
  3845  0117  1C70               	btfss	___lmul@multiplier,0
  3846  0118  291A               	goto	u921
  3847  0119  291B               	goto	u920
  3848  011A                     u921:
  3849  011A  2932               	goto	l1420
  3850  011B                     u920:
  3851  011B                     l1418:
  3852  011B  0874               	movf	___lmul@multiplicand,w
  3853  011C  07F9               	addwf	___lmul@product,f
  3854  011D  0875               	movf	___lmul@multiplicand+1,w
  3855  011E  1103               	clrz
  3856  011F  1803               	skipnc
  3857  0120  3E01               	addlw	1
  3858  0121  1903               	skipnz
  3859  0122  2924               	goto	u931
  3860  0123  07FA               	addwf	___lmul@product+1,f
  3861  0124                     u931:
  3862  0124  0876               	movf	___lmul@multiplicand+2,w
  3863  0125  1103               	clrz
  3864  0126  1803               	skipnc
  3865  0127  3E01               	addlw	1
  3866  0128  1903               	skipnz
  3867  0129  292B               	goto	u932
  3868  012A  07FB               	addwf	___lmul@product+2,f
  3869  012B                     u932:
  3870  012B  0877               	movf	___lmul@multiplicand+3,w
  3871  012C  1103               	clrz
  3872  012D  1803               	skipnc
  3873  012E  3E01               	addlw	1
  3874  012F  1903               	skipnz
  3875  0130  2932               	goto	u933
  3876  0131  07FC               	addwf	___lmul@product+3,f
  3877  0132                     u933:
  3878  0132                     l1420:
  3879  0132  3001               	movlw	1
  3880  0133  00F8               	movwf	??___lmul
  3881  0134                     u945:
  3882  0134  1003               	clrc
  3883  0135  0DF4               	rlf	___lmul@multiplicand,f
  3884  0136  0DF5               	rlf	___lmul@multiplicand+1,f
  3885  0137  0DF6               	rlf	___lmul@multiplicand+2,f
  3886  0138  0DF7               	rlf	___lmul@multiplicand+3,f
  3887  0139  0BF8               	decfsz	??___lmul,f
  3888  013A  2934               	goto	u945
  3889  013B                     l1422:
  3890  013B  3001               	movlw	1
  3891  013C                     u955:
  3892  013C  1003               	clrc
  3893  013D  0CF3               	rrf	___lmul@multiplier+3,f
  3894  013E  0CF2               	rrf	___lmul@multiplier+2,f
  3895  013F  0CF1               	rrf	___lmul@multiplier+1,f
  3896  0140  0CF0               	rrf	___lmul@multiplier,f
  3897  0141  3EFF               	addlw	-1
  3898  0142  1D03               	skipz
  3899  0143  293C               	goto	u955
  3900  0144  0873               	movf	___lmul@multiplier+3,w
  3901  0145  0472               	iorwf	___lmul@multiplier+2,w
  3902  0146  0471               	iorwf	___lmul@multiplier+1,w
  3903  0147  0470               	iorwf	___lmul@multiplier,w
  3904  0148  1D03               	skipz
  3905  0149  294B               	goto	u961
  3906  014A  294C               	goto	u960
  3907  014B                     u961:
  3908  014B  2917               	goto	l1416
  3909  014C                     u960:
  3910  014C                     l1424:
  3911  014C  087C               	movf	___lmul@product+3,w
  3912  014D  00F3               	movwf	?___lmul+3
  3913  014E  087B               	movf	___lmul@product+2,w
  3914  014F  00F2               	movwf	?___lmul+2
  3915  0150  087A               	movf	___lmul@product+1,w
  3916  0151  00F1               	movwf	?___lmul+1
  3917  0152  0879               	movf	___lmul@product,w
  3918  0153  00F0               	movwf	?___lmul
  3919  0154                     l252:
  3920  0154  0008               	return
  3921  0155                     __end_of___lmul:
  3922                           
  3923                           	psect	text23
  3924  03D0                     __ptext23:	
  3925 ;; *************** function ___lldiv *****************
  3926 ;; Defined at:
  3927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  divisor         4    0[BANK0 ] unsigned long 
  3930 ;;  dividend        4    4[BANK0 ] unsigned long 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  quotient        4    8[BANK0 ] unsigned long 
  3933 ;;  counter         1   12[BANK0 ] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  4    0[BANK0 ] unsigned long 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3943 ;;      Params:         0       8       0       0       0
  3944 ;;      Locals:         0       5       0       0       0
  3945 ;;      Temps:          1       0       0       0       0
  3946 ;;      Totals:         1      13       0       0       0
  3947 ;;Total ram usage:       14 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_I2C_Initialize
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function ___lldiv
  3958  03D0                     ___lldiv:
  3959  03D0                     l1428:	
  3960                           ;incstack = 0
  3961                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3962                           
  3963  03D0  3000               	movlw	0
  3964  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3965  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3966  03D3  00AB               	movwf	___lldiv@quotient+3
  3967  03D4  3000               	movlw	0
  3968  03D5  00AA               	movwf	___lldiv@quotient+2
  3969  03D6  3000               	movlw	0
  3970  03D7  00A9               	movwf	___lldiv@quotient+1
  3971  03D8  3000               	movlw	0
  3972  03D9  00A8               	movwf	___lldiv@quotient
  3973  03DA  0823               	movf	___lldiv@divisor+3,w
  3974  03DB  0422               	iorwf	___lldiv@divisor+2,w
  3975  03DC  0421               	iorwf	___lldiv@divisor+1,w
  3976  03DD  0420               	iorwf	___lldiv@divisor,w
  3977  03DE  1903               	skipnz
  3978  03DF  2BE1               	goto	u971
  3979  03E0  2BE2               	goto	u970
  3980  03E1                     u971:
  3981  03E1  2C2F               	goto	l1448
  3982  03E2                     u970:
  3983  03E2                     l1430:
  3984  03E2  01AC               	clrf	___lldiv@counter
  3985  03E3  0AAC               	incf	___lldiv@counter,f
  3986  03E4  2BF2               	goto	l1434
  3987  03E5                     l1432:
  3988  03E5  3001               	movlw	1
  3989  03E6  00FD               	movwf	??___lldiv
  3990  03E7                     u985:
  3991  03E7  1003               	clrc
  3992  03E8  0DA0               	rlf	___lldiv@divisor,f
  3993  03E9  0DA1               	rlf	___lldiv@divisor+1,f
  3994  03EA  0DA2               	rlf	___lldiv@divisor+2,f
  3995  03EB  0DA3               	rlf	___lldiv@divisor+3,f
  3996  03EC  0BFD               	decfsz	??___lldiv,f
  3997  03ED  2BE7               	goto	u985
  3998  03EE  3001               	movlw	1
  3999  03EF  00FD               	movwf	??___lldiv
  4000  03F0  087D               	movf	??___lldiv,w
  4001  03F1  07AC               	addwf	___lldiv@counter,f
  4002  03F2                     l1434:
  4003  03F2  1FA3               	btfss	___lldiv@divisor+3,7
  4004  03F3  2BF5               	goto	u991
  4005  03F4  2BF6               	goto	u990
  4006  03F5                     u991:
  4007  03F5  2BE5               	goto	l1432
  4008  03F6                     u990:
  4009  03F6                     l1436:
  4010  03F6  3001               	movlw	1
  4011  03F7  00FD               	movwf	??___lldiv
  4012  03F8                     u1005:
  4013  03F8  1003               	clrc
  4014  03F9  0DA8               	rlf	___lldiv@quotient,f
  4015  03FA  0DA9               	rlf	___lldiv@quotient+1,f
  4016  03FB  0DAA               	rlf	___lldiv@quotient+2,f
  4017  03FC  0DAB               	rlf	___lldiv@quotient+3,f
  4018  03FD  0BFD               	decfsz	??___lldiv,f
  4019  03FE  2BF8               	goto	u1005
  4020  03FF                     l1438:
  4021  03FF  0823               	movf	___lldiv@divisor+3,w
  4022  0400  0227               	subwf	___lldiv@dividend+3,w
  4023  0401  1D03               	skipz
  4024  0402  2C0D               	goto	u1015
  4025  0403  0822               	movf	___lldiv@divisor+2,w
  4026  0404  0226               	subwf	___lldiv@dividend+2,w
  4027  0405  1D03               	skipz
  4028  0406  2C0D               	goto	u1015
  4029  0407  0821               	movf	___lldiv@divisor+1,w
  4030  0408  0225               	subwf	___lldiv@dividend+1,w
  4031  0409  1D03               	skipz
  4032  040A  2C0D               	goto	u1015
  4033  040B  0820               	movf	___lldiv@divisor,w
  4034  040C  0224               	subwf	___lldiv@dividend,w
  4035  040D                     u1015:
  4036  040D  1C03               	skipc
  4037  040E  2C10               	goto	u1011
  4038  040F  2C11               	goto	u1010
  4039  0410                     u1011:
  4040  0410  2C20               	goto	l1444
  4041  0411                     u1010:
  4042  0411                     l1440:
  4043  0411  0820               	movf	___lldiv@divisor,w
  4044  0412  02A4               	subwf	___lldiv@dividend,f
  4045  0413  0821               	movf	___lldiv@divisor+1,w
  4046  0414  1C03               	skipc
  4047  0415  0F21               	incfsz	___lldiv@divisor+1,w
  4048  0416  02A5               	subwf	___lldiv@dividend+1,f
  4049  0417  0822               	movf	___lldiv@divisor+2,w
  4050  0418  1C03               	skipc
  4051  0419  0F22               	incfsz	___lldiv@divisor+2,w
  4052  041A  02A6               	subwf	___lldiv@dividend+2,f
  4053  041B  0823               	movf	___lldiv@divisor+3,w
  4054  041C  1C03               	skipc
  4055  041D  0F23               	incfsz	___lldiv@divisor+3,w
  4056  041E  02A7               	subwf	___lldiv@dividend+3,f
  4057  041F                     l1442:
  4058  041F  1428               	bsf	___lldiv@quotient,0
  4059  0420                     l1444:
  4060  0420  3001               	movlw	1
  4061  0421                     u1025:
  4062  0421  1003               	clrc
  4063  0422  0CA3               	rrf	___lldiv@divisor+3,f
  4064  0423  0CA2               	rrf	___lldiv@divisor+2,f
  4065  0424  0CA1               	rrf	___lldiv@divisor+1,f
  4066  0425  0CA0               	rrf	___lldiv@divisor,f
  4067  0426  3EFF               	addlw	-1
  4068  0427  1D03               	skipz
  4069  0428  2C21               	goto	u1025
  4070  0429                     l1446:
  4071  0429  3001               	movlw	1
  4072  042A  02AC               	subwf	___lldiv@counter,f
  4073  042B  1D03               	btfss	3,2
  4074  042C  2C2E               	goto	u1031
  4075  042D  2C2F               	goto	u1030
  4076  042E                     u1031:
  4077  042E  2BF6               	goto	l1436
  4078  042F                     u1030:
  4079  042F                     l1448:
  4080  042F  082B               	movf	___lldiv@quotient+3,w
  4081  0430  00A3               	movwf	?___lldiv+3
  4082  0431  082A               	movf	___lldiv@quotient+2,w
  4083  0432  00A2               	movwf	?___lldiv+2
  4084  0433  0829               	movf	___lldiv@quotient+1,w
  4085  0434  00A1               	movwf	?___lldiv+1
  4086  0435  0828               	movf	___lldiv@quotient,w
  4087  0436  00A0               	movwf	?___lldiv
  4088  0437                     l274:
  4089  0437  0008               	return
  4090  0438                     __end_of___lldiv:
  4091  007E                     btemp	set	126	;btemp
  4092  007E                     wtemp0	set	126
  4093                           
  4094                           	psect	config
  4095                           
  4096                           ;Config register CONFIG @ 0x2007
  4097                           ;	Oscillator Selection bits
  4098                           ;	FOSC = HS, HS oscillator
  4099                           ;	Watchdog Timer Enable bit
  4100                           ;	WDTE = OFF, WDT disabled
  4101                           ;	Power-up Timer Enable bit
  4102                           ;	PWRTE = ON, PWRT enabled
  4103                           ;	Brown-out Reset Enable bit
  4104                           ;	BOREN = ON, BOR enabled
  4105                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4106                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4107                           ;	Data EEPROM Memory Code Protection bit
  4108                           ;	CPD = OFF, Data EEPROM code protection off
  4109                           ;	Flash Program Memory Write Enable bits
  4110                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4111                           ;	In-Circuit Debugger Mode bit
  4112                           ;	DEBUG = 0x1, unprogrammed default
  4113                           ;	Flash Program Memory Code Protection bit
  4114                           ;	CP = OFF, Code protection off
  4115  2007                     	org	8199
  4116  2007  3F72               	dw	16242

Data Sizes:
    Strings     124
    Constant    0
    Data        12
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[9]), STR_12(CODE[7]), STR_11(CODE[9]), STR_10(CODE[10]), 
		 -> STR_9(CODE[8]), STR_8(CODE[7]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[7]), STR_4(CODE[17]), STR_3(CODE[8]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_day_print
    _day_print->_Lcd_Print_String
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _BCD_2_DEC->_I2C_Read
    _BCD_2_DEC->___wmul
    _Set_Time_Date->_DEC_2_BCD
    _I2C_Write->_DEC_2_BCD
    _DEC_2_BCD->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _Update_Current_Date_Time->_I2C_Write
    _Set_Time_Date->_I2C_Write
    _I2C_Initialize->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   14379
                                             21 BANK0     15    15      0
                     _I2C_Initialize
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                      _Set_Time_Date
           _Update_Current_Date_Time
                            ___awdiv
                            ___awmod
                          _day_print
 ---------------------------------------------------------------------------------
 (1) _day_print                                            2     0      2    1833
                                             12 COMMON     2     0      2
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     836
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_String                                     3     3      0     789
                                              9 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             0     0      0    2407
                          _BCD_2_DEC
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     653
                                              0 COMMON     6     4      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2     744
                                              6 COMMON     4     2      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Date                                        0     0      0    4234
                          _DEC_2_BCD
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1010
                                              0 BANK0      2     0      2
                          _DEC_2_BCD (ARG)
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    3224
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (4) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Start
     _Lcd_Cmd
     _Lcd_SetBit
   _Set_Time_Date
     _DEC_2_BCD
       ___awdiv
       ___awmod
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _DEC_2_BCD (ARG)
       _I2C_Hold (ARG)
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Read (ARG)
         _I2C_Hold
       ___wmul (ARG)
     _I2C_Begin
     _I2C_End
     _I2C_Read
     _I2C_Write
   ___awdiv
   ___awmod
   _day_print
     _Lcd_Clear
     _Lcd_Print_String
     _Lcd_Set_Cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 13:09:11 2021

               __size_of_I2C_Begin 0009                                  pc 0002  
               __size_of_I2C_Write 000A                                 l61 0F9D  
                               l62 0FA0                                 l63 0FA6  
                               l64 0FA7                                 l72 0F93  
                               l65 0FAD                                 l81 01A6  
                               l66 0FAE                                 l90 02DF  
                               l67 0FB4                                 l75 0F66  
                               l91 02EF                                 l92 0303  
                               l69 0FB5                                 l93 0306  
                               l86 024E                                 l89 02CB  
                               l99 00B1                       ___awdiv@sign 0076  
               __size_of_DEC_2_BCD 0030                                 fsr 0004  
              ___wmul@multiplicand 0072                                l102 01F9  
                              l111 0F2D                                l120 00DE  
                              l114 0F36                                l123 0FFF  
                              l108 0F59                                l132 05D2  
                              l117 0F40                                l126 010E  
                              l240 0FDA                                l152 0368  
                              l129 04E6                                l252 0154  
                              l404 02A7                                l238 0FC2  
                              l274 0437                                l391 03CF  
                              _RD2 0042                                _RD3 0043  
                              _RD4 0044                                _RD5 0045  
                              _RD6 0046                                _RD7 0047  
                              u600 0F55                                _PEN 048A  
                              u601 0F54                                u530 0F99  
                              u610 0F59                                u531 0F98  
                              u611 0F58                                u540 0FA4  
                              u700 039C                                u620 0FBC  
                              u541 0FA3                                u701 039B  
                              u621 0FBB                                u550 0FAB  
                              u551 0FAA                                u560 0FB2  
                              u720 03AD                                u800 027C  
                              u561 0FB1                                u721 03AC  
                              u801 027B                                u810 0286  
                              u650 0FD6                                u715 039D  
                              u811 0285                                u651 0FD5  
                              u635 0FC3                                u740 03C1  
                              u660 036E                                u900 00D6  
                              u580 02DF                                _SEN 0488  
                              u741 03C0                                u725 03A9  
                              u661 036D                                u645 0FCA  
                              u901 00D2                                u581 02DE  
                              u750 03C6                                u670 0379  
                              u830 0299                                u590 0303  
                              u751 03C5                                u735 03B5  
                              u671 0378                                u831 0298  
                              u815 0282                                u591 0302  
                              u575 02B9                                u920 011B  
                              u680 038A                                u840 029E  
                              u760 0254                                u921 011A  
                              u681 0389                                u841 029D  
                              u825 028D                                u761 0253  
                              u585 02DB                                u770 025F  
                              u914 00D9                                u850 015B  
                              u931 0124                                u771 025E  
                              u595 02FF                                u851 015A  
                              u932 012B                                u780 026A  
                              u933 0132                                u781 0269  
                              u870 0184                                u695 038E  
                              u871 0183                                u960 014C  
                              u961 014B                                u945 0134  
                              u865 0163                                u970 03E2  
                              u890 00B1                                u971 03E1  
                              u955 013C                                u795 026E  
                              u891 00B0                                u885 018C  
                              u990 03F6                                u991 03F5  
                              u985 03E7                                _day 004A  
                  __end_of_I2C_End 0F37                                _min 004E  
                              _sec 0050                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0076  
                             l1200 0FAB                               l1202 0FB2  
                             l1210 0F87                               l1212 0F90  
                             l1204 0F7B                               l1300 03BB  
                             l1220 02C4                               l1206 0F7E  
                             l1302 03C1                               l1310 024F  
                             l1230 02D2                               l1222 02C7  
                             l1214 02A9                               l1208 0F84  
                             l1304 03C6                               l1320 025F  
                             l1312 0250                               l1400 00D9  
                             l1232 02E2                               l1216 02B3  
                             l1306 03CB                               l1330 0278  
                             l1322 0264                               l1314 0254  
                             l1410 00DF                               l1250 0F55  
                             l1402 00DA                               l1242 02F0  
                             l1234 02E8                               l1218 02B6  
                             l1420 0132                               l1332 027C  
                             l1324 026A                               l1340 0299  
                             l1316 0259                               l1260 0FD0  
                             l1252 0FB6                               l1244 02F6  
                             l1236 02EB                               l1228 02CC  
                             l1500 0307                               l1430 03E2  
                             l1422 013B                               l1414 010F  
                             l1270 036E                               l1342 029E  
                             l1334 0286                               l1326 026D  
                             l1318 025B                               l1246 0F4D  
                             l1262 0FD6                               l1254 0FB8  
                             l1406 0FDB                               l1350 0156  
                             l1510 0330                               l1502 0314  
                             l1440 0411                               l1432 03E5  
                             l1424 014C                               l1416 0117  
                             l1280 0382                               l1272 0373  
                             l1344 02A3                               l1336 028C  
                             l1328 0274                               l1248 0F4D  
                             l1256 0FBC                               l1352 015B  
                             l1360 017E                               l1512 0337  
                             l1504 031B                               l1520 034C  
                             l1600 0780                               l1442 041F  
                             l1434 03F2                               l1418 011B  
                             l1194 0F95                               l1290 0398  
                             l1282 0384                               l1274 0375  
                             l1266 0369                               l1338 0293  
                             l1258 0FC9                               l1370 008E  
                             l1362 0184                               l1354 016C  
                             l1514 033E                               l1506 0322  
                             l1610 07A9                               l1602 0789  
                             l1530 05DB                               l1444 0420  
                             l1436 03F6                               l1428 03D0  
                             l1196 0F99                               l1452 01FA  
                             l1292 039C                               l1284 038A  
                             l1276 0379                               l1268 036A  
                             l1380 0F2A                               l1348 0F5A  
                             l1372 0091                               l1364 0195  
                             l1356 0171                               l1516 0345  
                             l1508 0329                               l1620 07D0  
                             l1612 07AF                               l1604 0791  
                             l1540 0602                               l1532 05EA  
                             l1446 0429                               l1438 03FF  
                             l1198 0FA4                               l1470 021E  
                             l1454 0200                               l1294 03AD  
                             l1286 038D                               l1278 037E  
                             l1382 0F2E                               l1390 00B2  
                             l1374 009E                               l1366 019A  
                             l1358 0177                               l1622 07D9  
                             l1614 07B8                               l1606 0797  
                             l1550 063D                               l1542 060E  
                             l1534 05EF                               l1526 05D3  
                             l1448 042F                               l1480 023C  
                             l1472 0224                               l1464 0200  
                             l1456 0200                               l1296 03B3  
                             l1288 0394                               l1384 0F33  
                             l1392 00B7                               l1376 00A4  
                             l1368 01A0                               l1616 07C1  
                             l1608 07A0                               l1560 069C  
                             l1552 0650                               l1544 0614  
                             l1536 05F4                               l1528 05D6  
                             l1490 01AF                               l1482 0242  
                             l1474 022A                               l1466 0206  
                             l1298 03B4                               l1378 0F25  
                             l1386 0F37                               l1394 00BF  
                             l1618 07C7                               l1570 06FB  
                             l1562 06AF                               l1554 0663  
                             l1546 0623                               l1538 05FC  
                             l1492 01B2                               l1484 0248  
                             l1476 0230                               l1468 020F  
                             l1388 0F3C                               l1396 00C8  
                             l1644 0351                               l1580 072A  
                             l1572 070E                               l1564 06C2  
                             l1556 0676                               l1548 0628  
                             l1494 01F8                               l1486 01A7  
                             l1478 0236                               l1398 00CD  
                             l1590 0751                               l1582 0733  
                             l1574 0713                               l1566 06D5  
                             l1558 0689                               l1488 01AB  
                             l1496 0438                               l1592 075A  
                             l1584 0739                               l1576 071B  
                             l1568 06E8                               l1498 04E7  
                             l1594 0763                               l1586 0742  
                             l1578 0721                               l1596 076B  
                             l1588 074B                               l1598 0771  
                             STR_1 0009                               STR_2 002B  
                             STR_3 0053                               STR_4 001A  
                             STR_5 0063                               STR_6 007F  
                             STR_7 0078                               STR_8 0071  
                             STR_9 005B                               u1010 0411  
                             u1011 0410                               u1005 03F8  
                             u1030 042F                               u1031 042E  
                             u1015 040D                               u1040 01C2  
                             u1025 0421                               u1107 0F8B  
                             u1045 01BD                               u1057 061C  
                             u1067 0779                               u1077 07E1  
                             u1087 020A                               u1097 0219  
                             _RCEN 048B                               _date 0048  
                      main@month_0 0040                        main@month_1 0041  
                             _main 05D3                               _hour 004C  
                 __end_of_I2C_Hold 0F5A                   __end_of_I2C_Read 00DF  
                             _year 0044                               btemp 007E  
                             start 0000                 Lcd_Print_Char@i_83 0077  
               Lcd_Print_Char@data 0074                    __end_of_Lcd_Cmd 0F94  
                       _Lcd_SetBit 0F94                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                  __end_of___awdiv 03D0                              STR_10 0037  
                            STR_11 004A                              STR_12 006A  
                            STR_13 0041                    __end_of___awmod 02A8  
                  __end_of___lldiv 0438                    ___awdiv@divisor 0070  
                  ___awdiv@counter 0075            __size_of_Lcd_Set_Cursor 0052  
                            _TRISD 0088                ___lmul@multiplicand 0074  
                __end_of_BCD_2_DEC 1000                  __end_of_I2C_Begin 0F2E  
                            _month 0046                  __end_of_I2C_Write 0F41  
                            pclath 000A                  __end_of_DEC_2_BCD 010F  
        __size_of_Lcd_Print_String 0025                              status 0003  
                            wtemp0 007E            __size_of_Lcd_Print_Char 005F  
                  __initialization 07EC                       __end_of_main 07EC  
                        ??_I2C_End 0070                             ??_main 0035  
               __size_of_Lcd_Clear 000D                 __size_of_Lcd_Start 0055  
                 ___awdiv@dividend 0072                          ??_Lcd_Cmd 0071  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                             ___lmul 010F  
                           ___wmul 0FB6                          ??___awdiv 0074  
                        ??___awmod 0074                          ??___lldiv 007D  
                      ?_Lcd_SetBit 0070                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
          __size_of_I2C_Initialize 0053   __end_of_Update_Current_Date_Time 05D3  
                        ?_I2C_Hold 0070                          ?_I2C_Read 0070  
                  Lcd_Set_Cursor@a 0077                    Lcd_Set_Cursor@b 0074  
                  Lcd_Set_Cursor@y 0079                    Lcd_Set_Cursor@z 0078  
          __end_of__initialization 07FC                  __end_of_Lcd_Clear 0F67  
                __end_of_Lcd_Start 024F                     __pcstackCOMMON 0070  
                     __pidataBANK0 0F41                 __size_of_day_print 0062  
                   _Lcd_Set_Cursor 0155                         ??_I2C_Hold 0070  
                       ??_I2C_Read 0072                         __pbssBANK0 0050  
                 _Lcd_Print_String 008D                __size_of_Lcd_SetBit 0022  
                   _Lcd_Print_Char 02A8                         __pmaintext 05D3  
                          ?___lmul 0070                            ?___wmul 0070  
                          _I2C_End 0F2E                     ___lmul@product 0079  
               Lcd_SetBit@data_bit 0070             __end_of_Lcd_Set_Cursor 01A7  
                 I2C_Read@incoming 0074           _Update_Current_Date_Time 04E7  
           __size_of_Set_Time_Date 00AF                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0003  
                        _BCD_2_DEC 0FDB                    Lcd_Print_Char@i 0075  
                          _Lcd_Cmd 0F7A             __end_of_Lcd_Print_Char 0307  
                        _I2C_Begin 0F25                  __end_of_day_print 0369  
                        _I2C_Write 0F37                          _DEC_2_BCD 00DF  
                          ___awdiv 0369                    __size_of___lmul 0046  
                          ___awmod 024F                            ___lldiv 03D0  
                  __size_of___wmul 0025                     _I2C_Initialize 01A7  
                  ?_Lcd_Set_Cursor 0074                            __ptext1 0307  
                          __ptext2 0155                            __ptext3 008D  
                          __ptext4 02A8                            __ptext5 0F5A  
                          __ptext6 04E7                            __ptext7 00B2  
                          __ptext8 0FDB                            __ptext9 0FB6  
                 ___awmod@dividend 0072               end_of_initialization 07FC  
                       ?_BCD_2_DEC 0076                         ?_I2C_Begin 0070  
                  ?_Lcd_Print_Char 0070                         ?_I2C_Write 0020  
                       ?_DEC_2_BCD 0079                    ___lldiv@divisor 0020  
                  ___lldiv@counter 002C                      _Set_Time_Date 0438  
           __end_of_I2C_Initialize 01FA                       ??_Lcd_SetBit 0070  
                __size_of_I2C_Hold 000D                  __size_of_I2C_Read 002D  
                       main@date_0 003E                         main@date_1 003F  
               __end_of_Lcd_SetBit 0FB6                         main@hour_0 003C  
                       main@hour_1 003D                         main@year_0 0042  
                       main@year_1 0043                     ?_Set_Time_Date 0070  
                        _Lcd_Clear 0F5A                BCD_2_DEC@to_convert 0076  
                  ?_I2C_Initialize 002D                          _Lcd_Start 01FA  
                   __end_of___lmul 0155                     __end_of___wmul 0FDB  
         __end_of_Lcd_Print_String 00B2                start_initialization 07EC  
                      ??_BCD_2_DEC 0078                        ??_I2C_Begin 0070  
                Lcd_Print_String@a 007B                  Lcd_Print_String@i 0079  
                      ??_I2C_Write 007D                        ??_DEC_2_BCD 007B  
                       ?_Lcd_Clear 0070                           ??___lmul 0078  
                         ??___wmul 0074                         init_fetch0 0F67  
                       ?_Lcd_Start 0070                        __pdataBANK0 0044  
                         ?_I2C_End 0070         ??_Update_Current_Date_Time 007D  
       Lcd_Print_Char@Lower_Nibble 0072                          ___latbits 0002  
                    __pcstackBANK0 0020                           ?_Lcd_Cmd 0070  
                  ??_Set_Time_Date 007D                        I2C_Read@ack 0070  
                 ??_Lcd_Set_Cursor 0075                          _day_print 0307  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___lldiv 0020                          __pstrings 0003  
                    day_print@disp 007C                           _I2C_Hold 0F4D  
                         _I2C_Read 00B2                   ??_Lcd_Print_Char 0071  
                   ___wmul@product 0074                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074                         ?_day_print 007C  
                      ??_Lcd_Start 0074                   __size_of_I2C_End 0009  
                      __stringbase 0008                  ___wmul@multiplier 0070  
                        main@min_0 003A                          main@min_1 003B  
                        main@sec_0 0038                          main@sec_1 0039  
                ___lmul@multiplier 0070                   __size_of_Lcd_Cmd 001A  
                 ??_I2C_Initialize 0031                      I2C_Write@data 0020  
                 __size_of___awdiv 0067                   __size_of___awmod 0059  
                 __size_of___lldiv 0068                 __end_of__stringtab 0009  
                ?_Lcd_Print_String 0070                 ??_Lcd_Print_String 0079  
                         __ptext10 0438                           __ptext11 0F37  
                         __ptext20 0F94                           __ptext12 0F2E  
                         __ptext21 01A7                           __ptext13 0F25  
                         __ptext22 010F                           __ptext14 0F4D  
                         __ptext23 03D0                           __ptext15 00DF  
                         __ptext16 024F                           __ptext17 0369  
                         __ptext18 01FA                           __ptext19 0F7A  
                    __size_of_main 0219                I2C_Initialize@feq_K 002D  
                      ??_day_print 007E         Lcd_Print_Char@Upper_Nibble 0073  
                         init_ram0 0F6B                   ___lldiv@dividend 0024  
                        stringcode 0003                 Lcd_Set_Cursor@temp 007A  
                 ___lldiv@quotient 0028                           stringdir 0003  
                         stringtab 0003  __size_of_Update_Current_Date_Time 00EC  
        ?_Update_Current_Date_Time 0070              __end_of_Set_Time_Date 04E7  
              DEC_2_BCD@to_convert 0079                 __size_of_BCD_2_DEC 0025  
